summary_pop_change<-function(df){
#Population Change
#Population Change
a<-df %>%
#filter(Shared == "Yes") %>%
group_by(Shared) %>%
dplyr::summarize(PopC_All_Med = median(SpoilageCon - InSpoilageCon), PopC_All_q25 = quantile(SpoilageCon - InSpoilageCon, 0.025), PopC_All_q975 = quantile(SpoilageCon - InSpoilageCon, 0.975))
b<-df %>%
#filter(Shared == "Yes") %>%
group_by(NULL) %>%
dplyr::summarize(PopC_All_Med = median(SpoilageCon - InSpoilageCon), PopC_All_q25 = quantile(SpoilageCon - InSpoilageCon, 0.025), PopC_All_q975 = quantile(SpoilageCon - InSpoilageCon, 0.975)) %>%
mutate(Shared = "All") %>%
select(Shared,PopC_All_Med,PopC_All_q25,PopC_All_q975)
return(rbind(a,b))
}
#This chunk Runs the ST Model
#Temp_Profile<-Df_RT_MT_RTB
Obtaining_Spoiled_Milks<-function(Temp_Profile, N_Years, Service_Length,TurningT_Length){
final_list <- list()
Outputs_List_TotalMilks<-list()
#Outputs_List_location_per<-list()
Outputs_List_per_spoiled<-list()
Outputs_List_pop_change<-list()
#Define the length of periods to match your model to properly adjust time.
Service_Length = Service_Length#50
TurningT_Length = TurningT_Length#25
for (i in 1:N_Years){
start_time<-Sys.time()
source("Main_Loops2.R")
#1. Start from here
Individual_Analysis_Milk<-rbind.fill(List_Sens_Pre)
#2. find the duplicates
#this step filters replicated based on the ID
Individual_Analysis_Milk<-Individual_Analysis_Milk %>%
group_by(ID) %>%
filter(TotServices==max(TotServices))
#3
AnalysysDF<-Individual_Analysis_Milk
#Adding the time of the services for those milks that were added to the service line during the lunch period.
AnalysysDF[AnalysysDF$Initial.Service>1,]
AnalysysDF$TotTime<-AnalysysDF$TotTime+(as.integer(AnalysysDF$Initial.Service)-1)*(Service_Length+TurningT_Length)
AnalysysDF$Shared<-ifelse(AnalysysDF$STtimes>0, "Yes", "No")
Output_Milk<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Temp_Profile, Interval =1/60,AF = 1.32)
Changes_Over_Time<-Output_Milk[[2]]
#If data frame is large this make time ~20 mins
AnalysysDF<- Appling_Changes(df = AnalysysDF,
Changes_Over_Time = Changes_Over_Time)
Outputs_List_TotalMilks<-append(Outputs_List_TotalMilks,nrow(AnalysysDF))
#Outputs_List_location_per<-append(Outputs_List_location_per,list(summary_location_per(AnalysysDF)))
Outputs_List_per_spoiled<-append(Outputs_List_per_spoiled,list(summary_per_spoiled(AnalysysDF)))
Outputs_List_pop_change<-append(Outputs_List_pop_change,list(summary_pop_change(AnalysysDF)))
end_time<-Sys.time()
Total_time<-end_time-start_time
print(Total_time)
}
return(list( Outputs_List_TotalMilks,Outputs_List_per_spoiled,Outputs_List_pop_change))
}
Outputs_RTB_23C<-Obtaining_Spoiled_Milks(Temp_Profile = Df_RT_MT_RTB_23C, N_Years = 50 ,Service_Length = 50 ,TurningT_Length = 25)
Outputs_RTB_23C<-Obtaining_Spoiled_Milks(Temp_Profile = Df_RT_MT_RTB_23C, N_Years = 50 ,Service_Length = 50 ,TurningT_Length = 25)
Outputs_ref_2C<-Obtaining_Spoiled_Milks(Temp_Profile = Df_RT_MT_Ref_2C, N_Years = 50 ,Service_Length = 50 ,TurningT_Length = 25)
Outputs_ref_7C<-Obtaining_Spoiled_Milks(Temp_Profile = Df_RT_MT_Ref_7C, N_Years = 50 ,Service_Length = 50 ,TurningT_Length = 25)
save.image("C:/Users/gareyes3/Box/Share Table Project/Milk Spoilage Model Docs/Spoilage Rdata Corea et al/23c_2c_7c.RData")
#Setting Working Directory-------------------------------------
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #Set working directory to the path of document
#Opening Libary and Inputs-------------------------------------
source("Util_Library.R")
source("Functions_Full_Analysis.R")
library(tidyverse)
#Inputs and Source Files-------------------------------------
#Inputs
source("Main_Loop.R")
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
source("Util_Output_Functions.R")
#Function for growth and lag phase
new_growth_rate<-function(newTemp, oldMu,oldTemp = 6, T0 = -4.15){
newMu<-((newTemp-T0)/(oldTemp-T0))* oldMu
return (newMu)
}
#Calculation of the new lag time.
new_lag_time <- function (newTemp, oldLag, oldTemp = 6, T0 = -4.15) {
numerator <- oldTemp -T0
denom <- newTemp - T0
newLag <- ( (numerator / denom)^2) * oldLag
return(newLag)
}
#Not in use, function to create a data frame based on interval and initial and final temperature
Time_Temp_Creation<-function(Total_Time, Interval, Initial_Temperature, Final_Temperature){
Time_Temp_df<-data.frame("min"= seq(0,Total_Time,by = Interval),
"tempM"  = seq(Initial_Temperature,Final_Temperature, by = ((Final_Temperature - Initial_Temperature)/(length(seq(0,Total_Time,by = Interval)) - 1) )))
}
Time_Temp_Creation_Var<-function(Total_Time, Interval, Mean_Temperature, SD_Temperature){
Time_Temp_df<-data.frame("min"= seq(0,Total_Time,by = Interval),
"tempM"= rnorm(n =Total_Time+1, mean = Mean_Temperature, sd= SD_Temperature))
return (Time_Temp_df)
}
#This function calculates thee growth based on a time and temperature profile for 1 specific milk with R100084 P Paoae
Func_Growth_LagCon<-function(In_Lag_Consumed, Time_Temp_df,Interval, AF){
#In_Lag_Consumed= Total lag time consumed
#Time_Temp_df = dataframe with time and temperature conditions
#Interval = time interval in the time_temp_df in hrs.
Total_Lag_Consumed = In_Lag_Consumed
Total_Growth = 0
old_lag = 0
NMax = 8.14
old_mumax = 0.083508
Growth_V = c()
for (i in 1:nrow(Time_Temp_df)){
if (Total_Lag_Consumed <1 && old_lag!=0){
Lag_t_interval<-new_lag_time(newTemp = Time_Temp_df$MilkTemp[i], oldLag = old_lag)
Lag_Consumed<-Interval/Lag_t_interval
Total_Lag_Consumed<-Total_Lag_Consumed+Lag_Consumed
Growth = 0
} else if (Total_Lag_Consumed>=1 | old_lag == 0){
Growth = ((new_growth_rate(newTemp = Time_Temp_df$MilkTemp[i], oldMu = old_mumax))/2.303)* AF#0.684 #Converted log10 from log ln
Total_Growth = Total_Growth + (Growth*Interval)
}
Growth_V = c(Growth_V,Total_Growth)
#print(length(Growth_V))
}
return(list(Total_Growth,Total_Lag_Consumed,Growth_V))
}
#Buchanan spoilage function
Spoilage_Function_Single_Milk<-function(Cont, Pop_Max, Time_Temp_df, Interval =1/60, AF){
Lag_Consumed = 0
#this function provides two outputs, the total growth, and the new updated lag phase consumed.
Output_Milk<-Func_Growth_LagCon(In_Lag_Consumed = Lag_Consumed ,Time_Temp_df = Time_Temp_df,Interval = Interval, AF=AF)
Lag_Consumed = Output_Milk[[2]]
Cont<-Output_Milk[[1]]+Cont
if( Cont>Pop_Max){
Cont = Pop_Max
}
return (list(Cont,Output_Milk[[3]]))
}
#Applying Changes over time with N max limit
Appling_Changes<-function(df,Changes_Over_Time){
NMax = 8.14
Contamination_v<-df$InSpoilageCon
Time_V<-df$TotTime
Final_contamination_v<-c()
for (i in 1:nrow(df)){
In_Cont<-Contamination_v[i]
Time<-Time_V[i]
if (Time == 0){
Total_Growth = 0
}else{
Total_Growth<-Changes_Over_Time[Time]
}
Final_Con<-In_Cont+Total_Growth
if(Final_Con>NMax){
Final_Con <- NMax
}
Final_contamination_v<-c(Final_contamination_v,Final_Con)
}
df$SpoilageCon<-Final_contamination_v
return(df)
}
#Before Running this make sure that the files from "Time and Temperature Profiles.rmd" have been generated accordingly
## Primary Scenarios
#Room Temp B
Df_RT_MT_RTB<-read.csv("Pedicted Time and Temp Profiles/Df_RT_MT_RTB.csv")
#Refrigerated Tray
Df_RT_MT_RT<-read.csv("Pedicted Time and Temp Profiles/Df_RT_MT_RT.csv")
#Tray With Ice Packs
Df_RT_MT_TIP<-read.csv("Pedicted Time and Temp Profiles/Df_RT_MT_TIP.csv")
#Tray with Ice
Df_RT_MT_TIC<-read.csv("Pedicted Time and Temp Profiles/Df_RT_MT_TIC.csv")
#Cooler with Ice
Df_RT_MT_CI<-read.csv("Pedicted Time and Temp Profiles/Df_RT_MT_CI.csv")
#room temp b with ref break
Df_RT_MT_RTB_refB<-read.csv("Pedicted Time and Temp Profiles/Df_RT_MT_RTB_refB.csv")
## Temperature Scenarios
#Room Temp B
Df_RT_MT_RTB_18C<-read.csv("Pedicted Time and Temp Profiles/Df_RT_MT_RTB_18C.csv")
#Refrigerated Tray
Df_RT_MT_RTB_21C<-read.csv("Pedicted Time and Temp Profiles/Df_RT_MT_RTB_21C.csv")
#Tray With Ice Packs
Df_RT_MT_RTB_23C<-read.csv("Pedicted Time and Temp Profiles/Df_RT_MT_RTB_23C.csv")
## Updated Refrigeration Temps
Df_RT_MT_Ref_7C<-read.csv("Pedicted Time and Temp Profiles/Df_RT_MT_Ref_7C.csv")
Df_RT_MT_Ref_2C<-read.csv("Pedicted Time and Temp Profiles/Df_RT_MT_Ref_2C.csv")
#Total Time
summary_Times<-function(df){
a<-df %>%
#filter(Shared == "No") %>%
group_by(Shared) %>%
dplyr::summarize(All_time=median(TotTime), Alltime_q25 = quantile(TotTime, 0.025), Alltime_q975 = quantile(TotTime, 0.975))
b<-df %>%
#filter(Shared == "No") %>%
group_by(NULL) %>%
dplyr::summarize(All_time=median(TotTime), Alltime_q25 = quantile(TotTime, 0.025), Alltime_q975 = quantile(TotTime, 0.975)) %>%
mutate(Shared = "All") %>%
select(Shared,All_time,Alltime_q25,Alltime_q975)
return(rbind(a,b))
}
summary_location_per<-function(df){
a<-df %>%
group_by(Location) %>%
dplyr::summarize(count = n(),
Day_1 = sum(TotTime<1440)/count,
Day_2 = sum(TotTime>1440 & TotTime<1440*2)/count,
Day_3 = sum(TotTime>1440*2 & TotTime<1440*3)/count,
Day_4 = sum(TotTime>1440*3 & TotTime<1440*4)/count,
Day_5 = sum(TotTime>1440*4 & TotTime<1440*5)/count
)
return (a)
}
summary_per_spoiled<-function(df){
#Spoiled Milks
a<-df %>%
#filter(Shared == "Yes") %>%
group_by(Shared) %>%
dplyr::summarize(All_Total_Spoiled = sum(SpoilageCon>6), percentage = (sum(SpoilageCon>6)/n()))
b<-df %>%
#filter(Shared == "Yes") %>%
group_by(NULL) %>%
dplyr::summarize(All_Total_Spoiled = sum(SpoilageCon>6), percentage = (sum(SpoilageCon>6)/n())) %>%
mutate(Shared = "All") %>%
select(Shared,All_Total_Spoiled,percentage)
return(rbind(a,b))
}
summary_pop_change<-function(df){
#Population Change
#Population Change
a<-df %>%
#filter(Shared == "Yes") %>%
group_by(Shared) %>%
dplyr::summarize(PopC_All_Med = median(SpoilageCon - InSpoilageCon), PopC_All_q25 = quantile(SpoilageCon - InSpoilageCon, 0.025), PopC_All_q975 = quantile(SpoilageCon - InSpoilageCon, 0.975))
b<-df %>%
#filter(Shared == "Yes") %>%
group_by(NULL) %>%
dplyr::summarize(PopC_All_Med = median(SpoilageCon - InSpoilageCon), PopC_All_q25 = quantile(SpoilageCon - InSpoilageCon, 0.025), PopC_All_q975 = quantile(SpoilageCon - InSpoilageCon, 0.975)) %>%
mutate(Shared = "All") %>%
select(Shared,PopC_All_Med,PopC_All_q25,PopC_All_q975)
return(rbind(a,b))
}
#This chunk Runs the ST Model
#Temp_Profile<-Df_RT_MT_RTB
Obtaining_Spoiled_Milks_DFs<-function(N_Years, Service_Length,TurningT_Length){
final_list <- list()
#Define the length of periods to match your model to properly adjust time.
Service_Length = Service_Length#50
TurningT_Length = TurningT_Length#25
for (i in 1:N_Years){
print(i)
start_time<-Sys.time()
source("Main_Loops2.R")
#1. Start from here
Individual_Analysis_Milk<-rbind.fill(List_Sens_Pre)
#2. find the duplicates
#this step filters replicated based on the ID
Individual_Analysis_Milk<-Individual_Analysis_Milk %>%
group_by(ID) %>%
filter(TotServices==max(TotServices))
#3
AnalysysDF<-Individual_Analysis_Milk
#Adding the time of the services for those milks that were added to the service line during the lunch period.
AnalysysDF[AnalysysDF$Initial.Service>1,]
AnalysysDF$TotTime<-AnalysysDF$TotTime+(as.integer(AnalysysDF$Initial.Service)-1)*(Service_Length+TurningT_Length)
AnalysysDF$Shared<-ifelse(AnalysysDF$STtimes>0, "Yes", "No")
final_list<-append(final_list,list(AnalysysDF))
end_time<-Sys.time()
Total_time<-end_time-start_time
print(Total_time)
}
return(final_list)
}
Outs_DFs<-Obtaining_Spoiled_Milks_DFs(N_Years = 50, Service_Length = 50,TurningT_Length = 25)
save.image("C:/Users/Gustavo Reyes/Box/Share Table Project/Milk Spoilage Model Docs/Spoilage Rdata Corea et al/Simulation 5-7.RData")
Outs_DFs_RTB<-Outs_DFs
RTB_List<-list()
Output_Milk_RTB<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_RT_MT_RTB, Interval =1/60,AF = 1.32)
Changes_Over_Time_RTB<-Output_Milk_RTB[[2]]
for (i in 1:50){
AnalysysDF_RTB<- Appling_Changes(df = Outs_DFs_RTB[[i]], Changes_Over_Time = Changes_Over_Time_RTB)
RTB_List<-append(RTB_List,list(AnalysysDF_RTB))
}
RTB_List[[i]]
RTB_List_per_spoiled<-list()
for (i in 1:50){
RTB_List_per_spoiled<-append(RTB_ListRTB_List_per_spoiled,list(summary_per_spoiled(RTB_List[[i]])))
RTB_List_per_spoiled<-list()
for (i in 1:50){
RTB_List_per_spoiled<-append(RTB_ListRTB_List_per_spoiled,list(summary_per_spoiled(RTB_List[[i]])))
}
RTB_List_per_spoiled<-list()
for (i in 1:50){
RTB_List_per_spoiled<-append(RTB_ListRTB_List_per_spoiled,list(summary_per_spoiled(RTB_List[[i]])))
}
RTB_List_per_spoiled<-list()
for (i in 1:50){
RTB_List_per_spoiled<-append(RTB_ListRTB_List_per_spoiled,list(summary_per_spoiled(RTB_List[[i]])))
}
RTB_List_per_spoiled<-list()
for (i in 1:50){
RTB_List_per_spoiled<-append(RTB_List_per_spoiled,list(summary_per_spoiled(RTB_List[[i]])))
}
Extracting_Total_SpoiledMilks<-function(Output_Name, N_Years){
Total_Milks<-c()
for( i in 1:N_Years){
Total_Milks[i]<-Output_Name[[i]][[3,2]]
}
return(Total_Milks)
}
Total_Milks_Spoiled_RTB<-Extracting_Total_SpoiledMilks(Output_Name = Outputs_RTB, N_Years = 50)
Total_Milks_Spoiled_RTB<-Extracting_Total_SpoiledMilks(Output_Name = RTB_List_per_spoiled, N_Years = 50)
Total_Milks_Spoiled_RTB
Outs_DFs_RT<-Outs_DFs
Outs_DFs_RT<-Outs_DFs
RT_List<-list()
Output_Milk_RT<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_RT_MT_RT, Interval =1/60,AF = 1.32)
Changes_Over_Time_RT<-Output_Milk_RT[[2]]
for (i in 1:50){
AnalysysDF_RT<- Appling_Changes(df = Outs_DFs_RT[[i]], Changes_Over_Time = Changes_Over_Time_RT)
RT_List<-append(RT_List,list(AnalysysDF_RT))
}
RT_List[[i]]
RT_List_per_spoiled<-list()
for (i in 1:50){
RT_List_per_spoiled<-append(RT_List_per_spoiled,list(summary_per_spoiled(RT_List[[i]])))
}
Total_Milks_Spoiled_RT<-Extracting_Total_SpoiledMilks(Output_Name = RT_List_per_spoiled, N_Years = 50)
Total_Milks_Spoiled_RT
Outs_DFs_TIP<-Outs_DFs
TIP_List<-list()
Output_Milk_TIP<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_TIP_MT_TIP, Interval =1/60,AF = 1.32)
Changes_Over_Time_TIP<-Output_Milk_TIP[[2]]
for (i in 1:50){
AnalysysDF_TIP<- Appling_Changes(df = Outs_DFs_TIP[[i]], Changes_Over_Time = Changes_Over_Time_TIP)
TIP_List<-append(TIP_List,list(AnalysysDF_TIP))
}
TIP_List[[i]]
TIP_List_per_spoiled<-list()
for (i in 1:50){
TIP_List_per_spoiled<-append(TIP_List_per_spoiled,list(summary_per_spoiled(TIP_List[[i]])))
}
Total_Milks_Spoiled_TIP<-Extracting_Total_SpoiledMilks(Output_Name = TIP_List_per_spoiled, N_Years = 50)
Total_Milks_Spoiled_TIP
TIP_List<-list()
Output_Milk_TIP<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_RT_MT_TIP, Interval =1/60,AF = 1.32)
Changes_Over_Time_TIP<-Output_Milk_TIP[[2]]
for (i in 1:50){
AnalysysDF_TIP<- Appling_Changes(df = Outs_DFs_TIP[[i]], Changes_Over_Time = Changes_Over_Time_TIP)
TIP_List<-append(TIP_List,list(AnalysysDF_TIP))
}
TIP_List[[i]]
TIP_List_per_spoiled<-list()
for (i in 1:50){
TIP_List_per_spoiled<-append(TIP_List_per_spoiled,list(summary_per_spoiled(TIP_List[[i]])))
}
Total_Milks_Spoiled_TIP<-Extracting_Total_SpoiledMilks(Output_Name = TIP_List_per_spoiled, N_Years = 50)
Total_Milks_Spoiled_TIP
Outs_DFs_TIC<-Outs_DFs
TIC_List<-list()
Output_Milk_TIC<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_RT_MT_TIC, Interval =1/60,AF = 1.32)
Changes_Over_Time_TIC<-Output_Milk_TIC[[2]]
for (i in 1:50){
AnalysysDF_TIC<- Appling_Changes(df = Outs_DFs_TIC[[i]], Changes_Over_Time = Changes_Over_Time_TIC)
TIC_List<-append(TIC_List,list(AnalysysDF_TIC))
}
TIC_List[[i]]
TIC_List_per_spoiled<-list()
for (i in 1:50){
TIC_List_per_spoiled<-append(TIC_List_per_spoiled,list(summary_per_spoiled(TIC_List[[i]])))
}
Total_Milks_Spoiled_TIC<-Extracting_Total_SpoiledMilks(Output_Name = TIC_List_per_spoiled, N_Years = 50)
Total_Milks_Spoiled_TIC
Outs_DFs_CI<-Outs_DFs
CI_List<-list()
Output_Milk_CI<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_RT_MT_CI, Interval =1/60,AF = 1.32)
Changes_Over_Time_CI<-Output_Milk_CI[[2]]
for (i in 1:50){
AnalysysDF_CI<- Appling_Changes(df = Outs_DFs_CI[[i]], Changes_Over_Time = Changes_Over_Time_CI)
CI_List<-append(CI_List,list(AnalysysDF_CI))
}
CI_List[[i]]
CI_List_per_spoiled<-list()
for (i in 1:50){
CI_List_per_spoiled<-append(CI_List_per_spoiled,list(summary_per_spoiled(CI_List[[i]])))
}
Total_Milks_Spoiled_CI<-Extracting_Total_SpoiledMilks(Output_Name = CI_List_per_spoiled, N_Years = 50)
Total_Milks_Spoiled_CI
Outs_DFs_RTB_refB<-Outs_DFs
RTB_refB_List<-list()
Output_Milk_RTB_refB<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_RT_MT_RTB_refB, Interval =1/60,AF = 1.32)
Changes_Over_Time_RTB_refB<-Output_Milk_RTB_refB[[2]]
for (i in 1:50){
AnalysysDF_RTB_refB<- Appling_Changes(df = Outs_DFs_RTB_refB[[i]], Changes_Over_Time = Changes_Over_Time_RTB_refB)
RTB_refB_List<-append(RTB_refB_List,list(AnalysysDF_RTB_refB))
}
RTB_refB_List[[i]]
RTB_refB_List_per_spoiled<-list()
for (i in 1:50){
RTB_refB_List_per_spoiled<-append(RTB_refB_List_per_spoiled,list(summary_per_spoiled(RTB_refB_List[[i]])))
}
Total_Milks_Spoiled_RTB_refB<-Extracting_Total_SpoiledMilks(Output_Name = RTB_refB_List_per_spoiled, N_Years = 50)
Total_Milks_Spoiled_RTB_refB
Outs_DFs_RTB_18C<-Outs_DFs
Outs_DFs_RTB_21C<-Outs_DFs
Outs_DFs_RTB_23C<-Outs_DFs
RTB_18C_List<-list()
Output_Milk_RTB_18C<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_RT_MT_RTB_18C, Interval =1/60,AF = 1.32)
Changes_Over_Time_RTB_18C<-Output_Milk_RTB_18C[[2]]
for (i in 1:50){
AnalysysDF_RTB_18C<- Appling_Changes(df = Outs_DFs_RTB_18C[[i]], Changes_Over_Time = Changes_Over_Time_RTB_18C)
RTB_18C_List<-append(RTB_18C_List,list(AnalysysDF_RTB_18C))
}
RTB_18C_List[[i]]
RTB_18C_List_per_spoiled<-list()
for (i in 1:50){
RTB_18C_List_per_spoiled<-append(RTB_18C_List_per_spoiled,list(summary_per_spoiled(RTB_18C_List[[i]])))
}
Total_Milks_Spoiled_RTB_18C<-Extracting_Total_SpoiledMilks(Output_Name = RTB_18C_List_per_spoiled, N_Years = 50)
Total_Milks_Spoiled_RTB_18C
RTB_21C_List<-list()
Output_Milk_RTB_21C<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_RT_MT_RTB_21C, Interval =1/60,AF = 1.32)
Changes_Over_Time_RTB_21C<-Output_Milk_RTB_21C[[2]]
for (i in 1:50){
AnalysysDF_RTB_21C<- Appling_Changes(df = Outs_DFs_RTB_21C[[i]], Changes_Over_Time = Changes_Over_Time_RTB_21C)
RTB_21C_List<-append(RTB_21C_List,list(AnalysysDF_RTB_21C))
}
RTB_21C_List[[i]]
RTB_21C_List_per_spoiled<-list()
for (i in 1:50){
RTB_21C_List_per_spoiled<-append(RTB_21C_List_per_spoiled,list(summary_per_spoiled(RTB_21C_List[[i]])))
}
Total_Milks_Spoiled_RTB_21C<-Extracting_Total_SpoiledMilks(Output_Name = RTB_21C_List_per_spoiled, N_Years = 50)
Total_Milks_Spoiled_RTB_21C
Outs_DFs_Ref_7C<-Outs_DFs
Outs_DFs_Ref_2C<-Outs_DFs
RTB_23C_List<-list()
Output_Milk_RTB_23C<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_RT_MT_RTB_23C, Interval =1/60,AF = 1.32)
Changes_Over_Time_RTB_23C<-Output_Milk_RTB_23C[[2]]
for (i in 1:50){
AnalysysDF_RTB_23C<- Appling_Changes(df = Outs_DFs_RTB_23C[[i]], Changes_Over_Time = Changes_Over_Time_RTB_23C)
RTB_23C_List<-append(RTB_23C_List,list(AnalysysDF_RTB_23C))
}
RTB_23C_List[[i]]
RTB_23C_List_per_spoiled<-list()
for (i in 1:50){
RTB_23C_List_per_spoiled<-append(RTB_23C_List_per_spoiled,list(summary_per_spoiled(RTB_23C_List[[i]])))
}
Total_Milks_Spoiled_RTB_23C<-Extracting_Total_SpoiledMilks(Output_Name = RTB_23C_List_per_spoiled, N_Years = 50)
Total_Milks_Spoiled_RTB_23C
Ref_7C_List<-list()
Output_Milk_Ref_7C<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_RT_MT_Ref_7C, Interval =1/60,AF = 1.32)
Changes_Over_Time_Ref_7C<-Output_Milk_Ref_7C[[2]]
for (i in 1:50){
AnalysysDF_Ref_7C<- Appling_Changes(df = Outs_DFs_Ref_7C[[i]], Changes_Over_Time = Changes_Over_Time_Ref_7C)
Ref_7C_List<-append(Ref_7C_List,list(AnalysysDF_Ref_7C))
}
Ref_7C_List[[i]]
Ref_7C_List_per_spoiled<-list()
for (i in 1:50){
Ref_7C_List_per_spoiled<-append(Ref_7C_List_per_spoiled,list(summary_per_spoiled(Ref_7C_List[[i]])))
}
Total_Milks_Spoiled_Ref_7C<-Extracting_Total_SpoiledMilks(Output_Name = Ref_7C_List_per_spoiled, N_Years = 50)
Total_Milks_Spoiled_Ref_7C
Ref_2C_List<-list()
Output_Milk_Ref_2C<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_RT_MT_Ref_2C, Interval =1/60,AF = 1.32)
Changes_Over_Time_Ref_2C<-Output_Milk_Ref_2C[[2]]
for (i in 1:50){
AnalysysDF_Ref_2C<- Appling_Changes(df = Outs_DFs_Ref_2C[[i]], Changes_Over_Time = Changes_Over_Time_Ref_2C)
Ref_2C_List<-append(Ref_2C_List,list(AnalysysDF_Ref_2C))
}
Ref_2C_List[[i]]
Ref_2C_List_per_spoiled<-list()
for (i in 1:50){
Ref_2C_List_per_spoiled<-append(Ref_2C_List_per_spoiled,list(summary_per_spoiled(Ref_2C_List[[i]])))
}
Total_Milks_Spoiled_Ref_2C<-Extracting_Total_SpoiledMilks(Output_Name = Ref_2C_List_per_spoiled, N_Years = 50)
Total_Milks_Spoiled_Ref_2C
mean(Total_Milks_Spoiled_RTB)
range (Total_Milks_Spoiled_RTB)
mean(Total_Milks_Spoiled_RT)
range (Total_Milks_Spoiled_RT)
mean(Total_Milks_Spoiled_TIP)
range (Total_Milks_Spoiled_TIP)
mean(Total_Milks_Spoiled_TIC)
range (Total_Milks_Spoiled_TIC)
mean(Total_Milks_Spoiled_CI)
range (Total_Milks_Spoiled_CI)
mean(Total_Milks_Spoiled_RTB_refB)
range (Total_Milks_Spoiled_RTB_refB)
mean(Total_Milks_Spoiled_RTB_18C)
range (Total_Milks_Spoiled_RTB_18C)
mean(Total_Milks_Spoiled_RTB_21C)
range (Total_Milks_Spoiled_RTB_21C)
mean(Total_Milks_Spoiled_RTB_23C)
range (Total_Milks_Spoiled_RTB_23C)
mean(Total_Milks_Spoiled_Ref_7C)
range (Total_Milks_Spoiled_Ref_7C)
mean(Total_Milks_Spoiled_Ref_2C)
range (Total_Milks_Spoiled_Ref_2C)
save.image("C:/Users/Gustavo Reyes/Box/Share Table Project/Milk Spoilage Model Docs/Spoilage Rdata Corea et al/Simulation 5-7-processed.RData")
for (i in 1:50){
nrow(RTB_List[[i]])
}
rows_RTB = c()
for (i in 1:50){
x_RTB = nrow(RTB_List[[i]])
rows_RTB = c(rows_RTB,x_RTB)
}
rows_RTB
mean(rows_RTB)
