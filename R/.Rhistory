return(rbind(a,b))
}
summary_Times(AnalysysDF_RTB)
summary_location_per<-function(df){
a<-df %>%
group_by(Location) %>%
dplyr::summarize(count = n(),
Day_1 = sum(TotTime<1440)/count,
Day_2 = sum(TotTime>1440 & TotTime<1440*2)/count,
Day_3 = sum(TotTime>1440*2 & TotTime<1440*3)/count,
Day_4 = sum(TotTime>1440*3 & TotTime<1440*4)/count,
Day_5 = sum(TotTime>1440*4 & TotTime<1440*5)/count
)
return (a)
}
summary_Times(AnalysysDF_RTB)
summary_location_per(AnalysysDF_RTB)
summary_per_spoiled(AnalysysDF_RTB)
summary_pop_change(AnalysysDF_RTB)
summary_Times(AnalysysDF_RT)
summary_location_per(AnalysysDF_RT)
summary_per_spoiled(AnalysysDF_RT)
summary_pop_change(AnalysysDF_RT)
summary_Times(AnalysysDF_TIC)
summary_location_per(AnalysysDF_TIC)
summary_per_spoiled(AnalysysDF_TIC)
summary_pop_change(AnalysysDF_TIC)
summary_Times(AnalysysDF_TIP)
summary_location_per(AnalysysDF_TIP)
summary_per_spoiled(AnalysysDF_TIP)
summary_pop_change(AnalysysDF_TIP)
summary_Times(AnalysysDF_TIP)
summary_location_per(AnalysysDF_TIP)
summary_per_spoiled(AnalysysDF_TIP)
summary_pop_change(AnalysysDF_TIP)
summary_Times(AnalysysDF_TIC)
summary_location_per(AnalysysDF_TIC)
summary_per_spoiled(AnalysysDF_TIC)
summary_pop_change(AnalysysDF_TIC)
summary_Times(AnalysysDF_RT)
summary_location_per(AnalysysDF_RT)
summary_per_spoiled(AnalysysDF_RT)
summary_pop_change(AnalysysDF_RT)
summary_Times(AnalysysDF_TIP)
summary_location_per(AnalysysDF_TIP)
summary_per_spoiled(AnalysysDF_TIP)
summary_pop_change(AnalysysDF_TIP)
summary_Times(AnalysysDF_TIC)
summary_location_per(AnalysysDF_TIC)
summary_per_spoiled(AnalysysDF_TIC)
summary_pop_change(AnalysysDF_TIC)
summary_Times(AnalysysDF_RT)
summary_location_per(AnalysysDF_RT)
summary_per_spoiled(AnalysysDF_RT)
summary_pop_change(AnalysysDF_RT)
summary_Times(AnalysysDF_RTB)
summary_location_per(AnalysysDF_RTB)
summary_per_spoiled(AnalysysDF_RTB)
summary_pop_change(AnalysysDF_RTB)
Df_RT_MT_RTB_refB_melted
All_6_melted<-rbind(Df_RT_MT_RTB_melted,
Df_RT_MT_RT_melted,
Df_RT_MT_TIC_melted,
Df_RT_MT_TIP_melted,
Df_RT_MT_CI_melted
Df_RT_MT_RTB_refB_melted)
All_6_melted<-rbind(Df_RT_MT_RTB_melted,
Df_RT_MT_RT_melted,
Df_RT_MT_TIC_melted,
Df_RT_MT_TIP_melted,
Df_RT_MT_CI_melted,
Df_RT_MT_RTB_refB_melted)
library(tidyverse)
library(reshape2)
#Function to get the h (heat transfer coefficient)
get_h<-function(Neg_slope, rho = 1.033, C = 4.2 , V = 0.236, A = 0.004275){
#Neg slope for each condition
neg_h =  ((Neg_slope*rho*C*V)/A)
return(- neg_h)
}
#This function gets temperature after some time. Based on Tinf and To
get_temp<-function(h, To, Tinf, time,  A =0.004275,rho =1.033, C= 4.2, V = 0.236 ){
#Time in minutes
#Tinf = External Temp
#To = Initial temperature of the milk
# h = convection trans coeff for that codition
return (exp(-(h*A/rho*C*V)*(time))*(To-Tinf)+Tinf)
}
#Function to get the temperature profile from an external temperature vector (Time and Temperature Profile)
predict_temp_fromProf<-function(Time_Temp_Prof, Initial_Temp, h_condition){
Time_Temp_Profile<-Time_Temp_Prof
Temp_Initial = Initial_Temp
Temp_V<-c()
for (i in 1:length(Time_Temp_Profile)){
T_inf<-Time_Temp_Profile[i]
if (i == 1){
New_Temp = Temp_Initial
}else if (i == 2){
New_Temp = get_temp(h = h_condition, To = Temp_Initial, Tinf =  T_inf, time = 1)
}else{
New_Temp = get_temp(h = h_condition, To = New_Temp, Tinf =  T_inf, time = 1)
}
Temp_V<-c(Temp_V, New_Temp)
}
return(Temp_V)
}
#Generate Temperature Conditions (Simulated Condition)
#Temperatures are a normal distribution
#tot time =minutes
#Iterval = minutes
Time_Temp_Creation_Var<-function(Total_Time, Interval, Mean_Temperature, SD_Temperature){
Time_Temp_df<-rnorm(n =Total_Time+1, mean = Mean_Temperature, sd= SD_Temperature)
return (Time_Temp_df)
}
#First cpnd = "Room Temp" , "Refrigeration", ....
#Second Cond= Same
#Total Time minutes - 1
#Interval = 1 minute
#Cycles = number of days
#Main function to create the time and temp profiles
Create_Temperature_Profile_days<-function(First_Cond,
Second_Cond,
First_Cond_Total_Time,
Second_Cond_Total_Time,
First_Cond_Mean_Temperature,
First_Cond_SD_Temperature,
Second_Cond_Mean_Temperature,
Second_Cond_SD_Temperature,
Interval,
Cycles){
First_Cond_Temps<-Time_Temp_Creation_Var(Total_Time = First_Cond_Total_Time, Interval = Interval ,
Mean_Temperature = First_Cond_Mean_Temperature,
SD_Temperature = First_Cond_SD_Temperature)
Second_Cond_Temps<-Time_Temp_Creation_Var(Total_Time = Second_Cond_Total_Time, Interval = Interval ,
Mean_Temperature = Second_Cond_Mean_Temperature,
SD_Temperature = Second_Cond_SD_Temperature)
First_Cond_Temps_Desc<-rep(First_Cond,length(First_Cond_Temps))
Second_Cond_Temps_Desc<-rep(Second_Cond,length(Second_Cond_Temps))
Temp_Vector<-c()
Cond_Vec<-c()
for (i in 1:Cycles){
Temp_Vector<-c(Temp_Vector,First_Cond_Temps,Second_Cond_Temps)
Cond_Vec<-c(Cond_Vec,First_Cond_Temps_Desc,Second_Cond_Temps_Desc)
}
Simulated_Conditions<-data.frame("Rtemp" = Temp_Vector,
"Condition" = Cond_Vec)
return(Simulated_Conditions)
}
Create_Temperature_Profile_var<-function(Service_Cond,
Break_Cond,
Overnight_Cond,
Service_Time,
Break_Time,
Overnight_Time,
Service_Cond_Mean_Temperature,
Service_Cond_SD_Temperature,
Break_Cond_Mean_Temperature,
Break_Cond_SD_Temperature,
Overnight_Cond_Mean_Temperature,
Overnight_Cond_SD_Temperature,
services,
Cycles,
Interval) {
Service_Condition<-Time_Temp_Creation_Var(Total_Time = Service_Time, Interval = Interval ,
Mean_Temperature = Service_Cond_Mean_Temperature,
SD_Temperature = Service_Cond_SD_Temperature)
Break_Condition<-Time_Temp_Creation_Var(Total_Time = Break_Time, Interval = Interval ,
Mean_Temperature = Break_Cond_Mean_Temperature,
SD_Temperature = Break_Cond_SD_Temperature)
Overnight_Condition<-Time_Temp_Creation_Var(Total_Time = Overnight_Time, Interval = Interval ,
Mean_Temperature = Overnight_Cond_Mean_Temperature,
SD_Temperature = Overnight_Cond_SD_Temperature)
Service_Cond_Temps_Desc<-rep(Service_Cond,length(Service_Condition))
Break_Cond_Temps_Desc<-rep(Break_Cond,length(Break_Condition))
Overnight_Cond_Temps_Desc<-rep(Overnight_Cond,length(Overnight_Condition))
Vector_services<-c()
condition_vector_services<-c()
for (i in 1:services){
if (i<services){
Vector_services<-c(Vector_services,Service_Condition,Break_Condition)
condition_vector_services<-c(condition_vector_services,Service_Cond_Temps_Desc,Break_Cond_Temps_Desc)
} else if (i == services){
Vector_services<-c(Vector_services,Service_Condition)
condition_vector_services<-c(condition_vector_services,Service_Cond_Temps_Desc)
}
}
Temp_Vector<-c()
Cond_Vec<-c()
for (i in 1:Cycles){
Temp_Vector<-c(Temp_Vector,Vector_services,Overnight_Condition)
Cond_Vec<-c(Cond_Vec,condition_vector_services,Overnight_Cond_Temps_Desc)
}
Simulated_Conditions<-data.frame("Rtemp" = Temp_Vector,
"Condition" = Cond_Vec)
return(Simulated_Conditions)
}
#Function to predict all milk based on the conditions...
#df = Milk df
#Temp_Initial = Milk's initial temperature. (Refrigeration)
predict_full_milk_temp<-function(df, Temp_Initial){
Temp_Milk_Vectors<-c()
Temp_Milk_Vectors<-c(Temp_Initial)
T_inf = df$Rtemp[1]
New_Temp = Temp_Initial
for (i in 2:length(df$Rtemp)){
#Selecting the condition that applies
if (df$Condition[i] == "Room Temp"){
h_condition = h_RTB
} else if (df$Condition[i] == "Refrigeration"){
h_condition = h_ref
} else if (df$Condition[i] == "Refrigerated Tray"){
h_condition = h_RT
} else if (df$Condition[i] == "Tray With Ice Packs"){
h_condition = h_TIP
} else if (df$Condition[i] == "Tray With Ice"){
h_condition = h_TIC
} else if (df$Condition[i] == "Cooler with Ice"){
h_condition = h_CI
}
#Checking if condition changed
if(df$Condition[i] != df$Condition[i-1]){
Condition_Change = 1
T_inf = df$Rtemp[i]
} else {
Condition_Change = 0
}
#Predicting the new temperature
New_Temp = get_temp(h = h_condition, To = New_Temp, Tinf =  T_inf, time = 1)
Temp_Milk_Vectors<-c(Temp_Milk_Vectors,New_Temp)
}
return(Temp_Milk_Vectors)
}
#Negative Slopes
Neg_Slope_RTB<-(-0.0124) #Room Temperature
Neg_Slope_Ref<-(-0.0141) #Refrigeration
Neg_Slope_RT<-(-0.0088) #Refrigerated Tray
Neg_Slope_TIC<-(-0.0057) #Tray with Ice
Neg_Slope_TIP<-(-0.0072) #Tray with Ice Packs
Neg_Slope_CI<-(-0.0019) #Cooler with Ice
#Getting the Heat Transfer Coefficients for each Temp
h_RTB = get_h(Neg_slope = Neg_Slope_RTB)
h_ref = get_h(Neg_slope = Neg_Slope_Ref)
h_RT = get_h(Neg_slope = Neg_Slope_RT)
h_TIC = get_h(Neg_slope = Neg_Slope_TIC)
h_TIP = get_h(Neg_slope = Neg_Slope_TIP)
h_CI = get_h(Neg_slope = Neg_Slope_CI)
#Worst case scenario 124, 1314.125 min Room Temp - 21 hr 55 min Refrigerated Overnight"
Time_Temp_Df_RTB<-Create_Temperature_Profile_days(First_Cond = "Room Temp",
Second_Cond = "Refrigeration",
First_Cond_Total_Time = 124,
Second_Cond_Total_Time = 1314,
First_Cond_Mean_Temperature = 22.1,
First_Cond_SD_Temperature = 0,#0.77,
Second_Cond_Mean_Temperature= 3.71,
Second_Cond_SD_Temperature = 0,#1.04,
Interval  =1,
Cycles = 5)
Temp_Milk_Vectors_RTB<-predict_full_milk_temp(df = Time_Temp_Df_RTB, Temp_Initial = 4.2)
Df_RT_MT_RTB<-data.frame("RoomTemp" = Time_Temp_Df_RTB$Rtemp,
"MilkTemp" = Temp_Milk_Vectors_RTB,
"Time" = 1:length(Temp_Milk_Vectors_RTB))
Df_RT_MT_RTB_melted<-melt(Df_RT_MT_RTB, id.vars = "Time")
Df_RT_MT_RTB_melted$Condition = "Room Temp B"
#Saving as CSV
write.csv(Df_RT_MT_RTB, file = "Pedicted Time and Temp Profiles/Df_RT_MT_RTB.csv")
Time_Temp_Df_RT<-Create_Temperature_Profile_days(First_Cond = "Refrigerated Tray",
Second_Cond = "Refrigeration",
First_Cond_Total_Time = 124,
Second_Cond_Total_Time = 1314,
First_Cond_Mean_Temperature = 22.1,
First_Cond_SD_Temperature = 0,#0.77,
Second_Cond_Mean_Temperature= 3.71,
Second_Cond_SD_Temperature = 0,#1.04,
Interval  =1,
Cycles = 5)
Temp_Milk_RT<-predict_full_milk_temp(Time_Temp_Df_RT, Temp_Initial = 4)
Df_RT_MT_RT<-data.frame("RoomTemp" = Time_Temp_Df_RT$Rtemp,
"MilkTemp" = Temp_Milk_RT,
"Time" = 1:length(Temp_Milk_RT))
Df_RT_MT_RT_melted<-melt(Df_RT_MT_RT, id.vars = "Time")
Df_RT_MT_RT_melted$Condition = "Refrigerated Tray"
write.csv(Df_RT_MT_RT, file = "Pedicted Time and Temp Profiles/Df_RT_MT_RT.csv")
#Worst case scenario 124, 1314.125 min Tray with ice packs - 21 hr 55 min Refrigerated Overnight"
Time_Temp_Df_TIP<-Create_Temperature_Profile_days(First_Cond = "Tray With Ice Packs",
Second_Cond = "Refrigeration",
First_Cond_Total_Time = 124,
Second_Cond_Total_Time = 1314,
First_Cond_Mean_Temperature = 22.1,
First_Cond_SD_Temperature = 0,#0.77,
Second_Cond_Mean_Temperature= 3.71,
Second_Cond_SD_Temperature = 0,#1.04,
Interval  =1,
Cycles = 5)
Temp_Milk_TIP<-predict_full_milk_temp(Time_Temp_Df_TIP, Temp_Initial = 4.2)
Df_RT_MT_TIP<-data.frame("RoomTemp" = Time_Temp_Df_TIP$Rtemp,
"MilkTemp" = Temp_Milk_TIP,
"Time" = 1:length(Temp_Milk_TIP))
Df_RT_MT_TIP_melted<-melt(Df_RT_MT_TIP, id.vars = "Time")
Df_RT_MT_TIP_melted$Condition = "Tray with Ice Packs"
write.csv(Df_RT_MT_TIP, file = "Pedicted Time and Temp Profiles/Df_RT_MT_TIP.csv")
Time_Temp_Df_TIC<-Create_Temperature_Profile_days(First_Cond = "Tray With Ice",
Second_Cond = "Refrigeration",
First_Cond_Total_Time = 124,
Second_Cond_Total_Time = 1314,
First_Cond_Mean_Temperature = 22.1,
First_Cond_SD_Temperature = 0,#0.77,
Second_Cond_Mean_Temperature= 3.71,
Second_Cond_SD_Temperature = 0,#1.04,
Interval  =1,
Cycles = 5)
Temp_Milk_TIC<-predict_full_milk_temp(Time_Temp_Df_TIC, Temp_Initial = 4.2)
Df_RT_MT_TIC<-data.frame("RoomTemp" = Time_Temp_Df_TIC$Rtemp,
"MilkTemp" = Temp_Milk_TIC,
"Time" = 1:length(Temp_Milk_TIC))
Df_RT_MT_TIC_melted<-melt(Df_RT_MT_TIC, id.vars = "Time")
Df_RT_MT_TIC_melted$Condition = "Tray with Ice"
write.csv(Df_RT_MT_TIC, file = "Pedicted Time and Temp Profiles/Df_RT_MT_TIC.csv")
Time_Temp_Df_CI<-Create_Temperature_Profile_days(First_Cond = "Cooler with Ice",
Second_Cond = "Refrigeration",
First_Cond_Total_Time = 124,
Second_Cond_Total_Time = 1314,
First_Cond_Mean_Temperature = 22.1,
First_Cond_SD_Temperature = 0,#0.77,
Second_Cond_Mean_Temperature= 3.71,
Second_Cond_SD_Temperature = 0,#1.04,
Interval  =1,
Cycles = 5)
Temp_Milk_CI<-predict_full_milk_temp(Time_Temp_Df_CI, Temp_Initial = 4.2)
Df_RT_MT_CI<-data.frame("RoomTemp" = Time_Temp_Df_CI$Rtemp,
"MilkTemp" = Temp_Milk_CI,
"Time" = 1:length(Temp_Milk_CI))
Df_RT_MT_CI_melted<-melt(Df_RT_MT_CI, id.vars = "Time")
Df_RT_MT_TIC_melted$Condition = "Cooler with Ice"
write.csv(Df_RT_MT_CI, file = "Pedicted Time and Temp Profiles/Df_RT_MT_CI.csv")
Time_Temp_Df_RTB_refB<-Create_Temperature_Profile_var(Service_Cond = "Room Temp",
Break_Cond ="Refrigeration",
Overnight_Cond = "Refrigeration",
Service_Time = 49,
Break_Time = 24,
Overnight_Time = 1314,
Service_Cond_Mean_Temperature = 22.1,
Service_Cond_SD_Temperature = 0,
Break_Cond_Mean_Temperature = 3.71,
Break_Cond_SD_Temperature = 0,
Overnight_Cond_Mean_Temperature = 3.71,
Overnight_Cond_SD_Temperature = 0,
services = 2,
Cycles = 5,
Interval = 1)
Temp_Milk_RTB_refB<-predict_full_milk_temp(Time_Temp_Df_RTB_refB, Temp_Initial = 4.2)
Df_RT_MT_RTB_refB<-data.frame("RoomTemp" = Time_Temp_Df_RTB_refB$Rtemp,
"MilkTemp" = Temp_Milk_RTB_refB,
"Time" = 1:length(Temp_Milk_RTB_refB))
Df_RT_MT_RTB_refB_melted<-melt(Df_RT_MT_RTB_refB, id.vars = "Time")
Df_RT_MT_RTB_refB_melted$Condition = "Room Temp B Ref Break"
write.csv(Df_RT_MT_RTB_refB, file = "Pedicted Time and Temp Profiles/Df_RT_MT_RTB_refB.csv")
All_6_melted<-rbind(Df_RT_MT_RTB_melted,
Df_RT_MT_RT_melted,
Df_RT_MT_TIC_melted,
Df_RT_MT_TIP_melted,
Df_RT_MT_CI_melted,
Df_RT_MT_RTB_refB_melted)
Df_RT_MT_RTB_melted
Df_RT_MT_RT_melted
Df_RT_MT_TIC_melted
Df_RT_MT_TIP_melted
Df_RT_MT_CI_melted
Time_Temp_Df_CI<-Create_Temperature_Profile_days(First_Cond = "Cooler with Ice",
Second_Cond = "Refrigeration",
First_Cond_Total_Time = 124,
Second_Cond_Total_Time = 1314,
First_Cond_Mean_Temperature = 22.1,
First_Cond_SD_Temperature = 0,#0.77,
Second_Cond_Mean_Temperature= 3.71,
Second_Cond_SD_Temperature = 0,#1.04,
Interval  =1,
Cycles = 5)
Temp_Milk_CI<-predict_full_milk_temp(Time_Temp_Df_CI, Temp_Initial = 4.2)
Df_RT_MT_CI<-data.frame("RoomTemp" = Time_Temp_Df_CI$Rtemp,
"MilkTemp" = Temp_Milk_CI,
"Time" = 1:length(Temp_Milk_CI))
Df_RT_MT_CI_melted<-melt(Df_RT_MT_CI, id.vars = "Time")
Df_RT_MT_CI_melted$Condition = "Cooler with Ice"
write.csv(Df_RT_MT_CI, file = "Pedicted Time and Temp Profiles/Df_RT_MT_CI.csv")
Time_Temp_Df_RTB_refB<-Create_Temperature_Profile_var(Service_Cond = "Room Temp",
Break_Cond ="Refrigeration",
Overnight_Cond = "Refrigeration",
Service_Time = 49,
Break_Time = 24,
Overnight_Time = 1314,
Service_Cond_Mean_Temperature = 22.1,
Service_Cond_SD_Temperature = 0,
Break_Cond_Mean_Temperature = 3.71,
Break_Cond_SD_Temperature = 0,
Overnight_Cond_Mean_Temperature = 3.71,
Overnight_Cond_SD_Temperature = 0,
services = 2,
Cycles = 5,
Interval = 1)
Temp_Milk_RTB_refB<-predict_full_milk_temp(Time_Temp_Df_RTB_refB, Temp_Initial = 4.2)
Df_RT_MT_RTB_refB<-data.frame("RoomTemp" = Time_Temp_Df_RTB_refB$Rtemp,
"MilkTemp" = Temp_Milk_RTB_refB,
"Time" = 1:length(Temp_Milk_RTB_refB))
Df_RT_MT_RTB_refB_melted<-melt(Df_RT_MT_RTB_refB, id.vars = "Time")
Df_RT_MT_RTB_refB_melted$Condition = "Room Temp B Ref Break"
write.csv(Df_RT_MT_RTB_refB, file = "Pedicted Time and Temp Profiles/Df_RT_MT_RTB_refB.csv")
All_6_melted<-rbind(Df_RT_MT_RTB_melted,
Df_RT_MT_RT_melted,
Df_RT_MT_TIC_melted,
Df_RT_MT_TIP_melted,
Df_RT_MT_CI_melted,
Df_RT_MT_RTB_refB_melted)
ggplot(data = All_6_melted_melted, aes(x = Time, y = value, color = variable))+
geom_line(size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "RTB with ref breaks - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_wrap()
ggplot(data = All_6_melted, aes(x = Time, y = value, color = variable))+
geom_line(size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "RTB with ref breaks - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_wrap()
ggplot(data = All_6_melted, aes(x = Time, y = value, color = variable))+
geom_line(size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "RTB with ref breaks - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_wrap(~Condition)
ggplot(data = All_6_melted, aes(x = Time, y = value, color = variable))+
geom_line(size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "RTB with ref breaks - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_wrap(~Condition, ncol= 1)
Time_Temp_Df_TIC<-Create_Temperature_Profile_days(First_Cond = "Tray With Ice",
Second_Cond = "Refrigeration",
First_Cond_Total_Time = 124,
Second_Cond_Total_Time = 1314,
First_Cond_Mean_Temperature = 22.1,
First_Cond_SD_Temperature = 0,#0.77,
Second_Cond_Mean_Temperature= 3.71,
Second_Cond_SD_Temperature = 0,#1.04,
Interval  =1,
Cycles = 5)
Temp_Milk_TIC<-predict_full_milk_temp(Time_Temp_Df_TIC, Temp_Initial = 4.2)
Df_RT_MT_TIC<-data.frame("RoomTemp" = Time_Temp_Df_TIC$Rtemp,
"MilkTemp" = Temp_Milk_TIC,
"Time" = 1:length(Temp_Milk_TIC))
Df_RT_MT_TIC_melted<-melt(Df_RT_MT_TIC, id.vars = "Time")
Df_RT_MT_TIC_melted$Condition = "Tray with Ice"
write.csv(Df_RT_MT_TIC, file = "Pedicted Time and Temp Profiles/Df_RT_MT_TIC.csv")
ggplot(data = Df_RT_MT_RTB_refB_melted, aes(x = Time, y = value, color = variable))+
geom_line(size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "RTB with ref breaks - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")
ggsave("Pedicted Time and Temp Profiles/PredictedRTB_refB.png", height = 3, width = 8, dpi = 300)
All_6_melted<-rbind(Df_RT_MT_RTB_melted,
Df_RT_MT_RT_melted,
Df_RT_MT_TIC_melted,
Df_RT_MT_TIP_melted,
Df_RT_MT_CI_melted,
Df_RT_MT_RTB_refB_melted)
ggplot(data = All_6_melted, aes(x = Time, y = value, color = variable))+
geom_line(size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "RTB with ref breaks - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_wrap(~Condition, ncol= 1)
ggsave("Pedicted Time and Temp Profiles/All Temp Combined.png", height = 8, width = 8, dpi = 300)
ggplot(data = All_6_melted, aes(x = Time, y = value, color = variable))+
geom_line(size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "RTB with ref breaks - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_wrap(~Condition, ncol= 1)+
theme(legend.position = "bottom")
ggsave("Pedicted Time and Temp Profiles/All Temp Combined.png", height = 6, width = 8, dpi = 300)
All_6_melted<-rbind(Df_RT_MT_RTB_melted,
Df_RT_MT_RT_melted,
Df_RT_MT_TIC_melted,
Df_RT_MT_TIP_melted,
Df_RT_MT_CI_melted,
Df_RT_MT_RTB_refB_melted)
ggplot(data = All_6_melted, aes(x = Time, y = value, color = variable))+
geom_line(size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "Milk Temperature for different Temperature profiles")+
scale_color_discrete(name = "Temperature Profile")+
facet_wrap(~Condition, ncol= 1)+
theme(legend.position = "bottom")
ggsave("Pedicted Time and Temp Profiles/All Temp Combined.png", height = 6, width = 8, dpi = 300)
load("C:/Users/Gustavo Reyes/Box/Share Table Project/Milk Spoilage Model Docs/RData for 1k week iterations.RData")
summary(chickwts)
model_chicken<-lm(data = chickwts, formula = weight~factor(feed))
summary(model_chicken)
par(mfrow=c(2,2))
plot(model_chicken)
chickwts
model_chicken_null<-lm(data = chickwts, formula = weight~1)
anova(model_chicken_null, model_chicken)
TukeyHSD(aov(weight~factor(feed), data=chickwts))
TukeyHSD(aov(weight~factor(feed), data=chickwts))
install.packages("nsm3data")
library(nsm3data)
summary(welds)
welds
welds$cycle<-as.factor(welds$cycle)
welds$gage<-as.factor(welds$gage)
summary(welds)
