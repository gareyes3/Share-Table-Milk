source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
source("Util_Output_Functions.R")
#Running Loop First:-------------------------------------
start_time<-Sys.time()
source("Main_Loops2.R")
View(Pre_Data.Frame)
View(Pre_Data)
View(Fr_Data.Frame)
#Setting Working Directory-------------------------------------
#setwd("C:/Users/gareyes3/Documents/GitHub/Share-Table-Milk/R")
#setwd("G:/Share Table QMRA/Share-Table-QMRA/R")
#setwd(getSrcDirectory()[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #Set working directory to the path of document
#Opening Libary and Inputs-------------------------------------
source("Util_Library.R")
source("Functions_Full_Analysis.R")
#Inputs and Source Files-------------------------------------
#Inputs
source("Main_Loop.R")
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
source("Util_Output_Functions.R")
#Running Loop First:-------------------------------------
start_time<-Sys.time()
source("Main_Loops2.R")
#Setting Working Directory-------------------------------------
#setwd("C:/Users/gareyes3/Documents/GitHub/Share-Table-Milk/R")
#setwd("G:/Share Table QMRA/Share-Table-QMRA/R")
#setwd(getSrcDirectory()[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #Set working directory to the path of document
#Opening Libary and Inputs-------------------------------------
source("Util_Library.R")
source("Functions_Full_Analysis.R")
#Inputs and Source Files-------------------------------------
#Inputs
source("Main_Loop.R")
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
source("Util_Output_Functions.R")
#Running Loop First:-------------------------------------
start_time<-Sys.time()
source("Main_Loops2.R")
View(Fr_Data.Frame)
View(Pre_Data)
func_mainloop_outs<-function(){
if (Sim_Fruit ==1 && Sim_PRE ==0 && Sim_PSS ==0){
Outputs_Student_Loop<-list(Fr_Data.Frame=Fr_Data.Frame) #Fruit on
} else if (Sim_Fruit ==0 && Sim_PRE ==1 && Sim_PSS ==0){
Outputs_Student_Loop<-list(Pre_Data.Frame=Pre_Data.Frame) #PRE on
} else if (Sim_Fruit ==0 && Sim_PRE ==0 && Sim_PSS ==1){
Outputs_Student_Loop<-list(Pss_Data.Frame=Pss_Data.Frame) #PSS on
} else if (Sim_Fruit ==1 && Sim_PRE ==1 && Sim_PSS ==0){
Outputs_Student_Loop<-list(Fr_Data.Frame=Fr_Data.Frame,Pre_Data.Frame=Pre_Data.Frame) #Fruit and PRE on
} else if (Sim_Fruit ==1 && Sim_PRE ==0 && Sim_PSS ==1){
Outputs_Student_Loop<-list(Fr_Data.Frame=Fr_Data.Frame,Pss_Data.Frame=Pss_Data.Frame) #Fruit and PSS on
} else if (Sim_Fruit ==0 && Sim_PRE ==1 && Sim_PSS ==1){
Outputs_Student_Loop<-list(Fr_Data.Frame=Fr_Data.Frame,Pss_Data.Frame=Pss_Data.Frame) #PRE and PSS on
} else if (Sim_Fruit ==1 && Sim_PRE ==1 && Sim_PSS ==1){
Outputs_Student_Loop<-list(Fr_Data.Frame=Fr_Data.Frame,Pss_Data.Frame=Pss_Data.Frame, Pre_Data.Frame = Pre_Data.Frame) #Fruit, PRE and PSS on
}
return (Outputs_Student_Loop)
}
#Inputs and Source Files-------------------------------------
#Inputs
source("Main_Loop.R")
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
source("Util_Output_Functions.R")
#Running Loop First:-------------------------------------
start_time<-Sys.time()
source("Main_Loops2.R")
#Setting Working Directory-------------------------------------
#setwd("C:/Users/gareyes3/Documents/GitHub/Share-Table-Milk/R")
#setwd("G:/Share Table QMRA/Share-Table-QMRA/R")
#setwd(getSrcDirectory()[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #Set working directory to the path of document
#Opening Libary and Inputs-------------------------------------
source("Util_Library.R")
source("Functions_Full_Analysis.R")
#Inputs and Source Files-------------------------------------
#Inputs
source("Main_Loop.R")
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
source("Util_Output_Functions.R")
#Running Loop First:-------------------------------------
start_time<-Sys.time()
source("Main_Loops2.R")
library(scales)
library(forcats)
Pre_Data %>%
count(Location) %>%
arrange(desc(n)) %>%
mutate(Location = fct_reorder(Location, n)) %>%
ggplot(aes(x =Location, y = n/sum(n)*100))+
scale_y_continuous(labels = scales::percent_format(scale = 1) )+
geom_col()+
labs(x = "Final Food Location", y = "Percent of milk items by location", title= "Final Location for milk-Donation happends end of week")+
theme(plot.title = element_text(hjust = 0.5))+
coord_flip()
Pre_Data %>%
ggplot(aes(x = TotTime))+
geom_histogram()+
scale_x_continuous(n.breaks= 10)+
labs(x = "Time in Hours", y = "Count ", title= "Time in system by Item week")+
theme(plot.title = element_text(hjust = 0.5))
Pre_Data %>%
ggplot(aes(x = SpoilageCon))+
geom_histogram()+
geom_vline(xintercept =7, color= "Red")+
scale_x_continuous(n.breaks= 10)+
labs(x = "Phsychotroph Population Log CFU/ml", y = "Count", title= "APC Levels all milk items")+
theme(plot.title = element_text(hjust = 0.5))
Pre_Data %>%
ggplot(aes(x = SpoilageCon))+
geom_histogram()+
geom_vline(xintercept =7, color= "Red")+
scale_x_continuous(n.breaks= 10)+
labs(x = "Phsychotroph Population Log CFU/ml", y = "Count", title= "APC Levels all milk items")+
theme(plot.title = element_text(hjust = 0.5))+
theme_bw()
Pre_Data %>%
ggplot(aes(x = SpoilageCon))+
geom_histogram()+
geom_vline(xintercept =7, color= "Red")+
scale_x_continuous(n.breaks= 10)+
labs(x = "Phsychotroph Population Log CFU/ml", y = "Count", title= "APC Levels all milk items")+
theme(plot.title = element_text(hjust = 0.5))+
theme_classic()
Pre_Data %>%
ggplot(aes(x = SpoilageCon))+
geom_histogram()+
geom_vline(xintercept =7, color= "Red")+
scale_x_continuous(n.breaks= 10)+
labs(x = "Phsychotroph Population Log CFU/ml", y = "Count", title= "APC Levels all milk items")+
theme(plot.title = element_text(hjust = 0.5))+
theme_dark()
Pre_Data %>%
ggplot(aes(x = SpoilageCon))+
geom_histogram()+
geom_vline(xintercept =7, color= "Red")+
scale_x_continuous(n.breaks= 10)+
labs(x = "Phsychotroph Population Log CFU/ml", y = "Count", title= "APC Levels all milk items")+
theme(plot.title = element_text(hjust = 0.5))
Pre_Data %>%
ggplot(aes(x = SpoilageCon))+
geom_histogram(color="darkblue", fill="lightblue")+
geom_vline(xintercept =7, color= "Red")+
scale_x_continuous(n.breaks= 10)+
labs(x = "Phsychotroph Population Log CFU/ml", y = "Count", title= "APC Levels all milk items")+
theme(plot.title = element_text(hjust = 0.5))
Pre_Data %>%
ggplot(aes(x = SpoilageCon))+
geom_histogram(color="darkblue", fill="lightblue")+
geom_vline(xintercept =7, color= "Red")+
scale_x_continuous(n.breaks= 10)+
labs(x = "Phsychotroph Population Log CFU/ml", y = "Count", title= "APC Levels per Milk")+
theme(plot.title = element_text(hjust = 0.5))
Pre_Data %>%
ggplot(aes(x = SpoilageCon))+
geom_histogram(color="darkblue", fill="lightblue")+
geom_vline(xintercept =7, color= "Red")+
scale_x_continuous(n.breaks= 10)+
labs(x = "Phsychotroph Population Log CFU/ml", y = "Count", title= "APC Levels per milk carton")+
theme(plot.title = element_text(hjust = 0.5))
Pre_Data %>%
ggplot(aes(x = SpoilageCon))+
geom_histogram(color="darkblue", fill="lightblue")+
geom_vline(xintercept =7, color= "Red")+
scale_x_continuous(n.breaks= 10)+
labs(x = "Phsychotroph Population Log CFU/ml", y = "Count", title= "Levels per milk carton")+
theme(plot.title = element_text(hjust = 0.5))
Pre_Data %>%
ggplot(aes(y = SpoilageCon, x= TotTime))+
geom_point( size =2, fill = "skyblue", shape = 21, alpha = 0.7, fill = "blue")+
geom_hline(yintercept =7, color= "Red")+
facet_wrap(.~Location, scales = "free_x")+
labs(x = "Time in System", y = "Phsychotroph Population Log CFU/ml", title= "Psychotrophic Population vs total time in system, milk Items- Week")+
scale_y_continuous(n.breaks= 10)+
scale_x_continuous(n.breaks= 10)+
theme(plot.title = element_text(hjust = 0.5))
View(Pre_Data)
View(Pre_Data)
View(Extra_Items_Pre)
View(datalistPre_days)
datalistPre_days[[5]][["Location"]]
datalistPre_days[[4]][["Location"]]
#Setting Working Directory-------------------------------------
#setwd("C:/Users/gareyes3/Documents/GitHub/Share-Table-Milk/R")
#setwd("G:/Share Table QMRA/Share-Table-QMRA/R")
#setwd(getSrcDirectory()[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #Set working directory to the path of document
#Opening Libary and Inputs-------------------------------------
source("Util_Library.R")
source("Functions_Full_Analysis.R")
#Inputs and Source Files-------------------------------------
#Inputs
source("Main_Loop.R")
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
source("Util_Output_Functions.R")
#Running Loop First:-------------------------------------
start_time<-Sys.time()
source("Main_Loops2.R")
#Setting Working Directory-------------------------------------
#setwd("C:/Users/gareyes3/Documents/GitHub/Share-Table-Milk/R")
#setwd("G:/Share Table QMRA/Share-Table-QMRA/R")
#setwd(getSrcDirectory()[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #Set working directory to the path of document
#Opening Libary and Inputs-------------------------------------
source("Util_Library.R")
source("Functions_Full_Analysis.R")
#Inputs and Source Files-------------------------------------
#Inputs
source("Main_Loop.R")
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
source("Util_Output_Functions.R")
#Running Loop First:-------------------------------------
start_time<-Sys.time()
source("Main_Loops2.R")
View(Pre_Data)
Pre_Data %>%
filter(Location=="Shared")
#Setting Working Directory-------------------------------------
#setwd("C:/Users/gareyes3/Documents/GitHub/Share-Table-Milk/R")
#setwd("G:/Share Table QMRA/Share-Table-QMRA/R")
#setwd(getSrcDirectory()[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #Set working directory to the path of document
#Opening Libary and Inputs-------------------------------------
source("Util_Library.R")
source("Functions_Full_Analysis.R")
#Inputs and Source Files-------------------------------------
#Inputs
source("Main_Loop.R")
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
source("Util_Output_Functions.R")
#Running Loop First:-------------------------------------
start_time<-Sys.time()
source("Main_Loops2.R")
View(Pre_Data)
View(datalistPre_days)
View(List_Sens_Pre)
Pre_Data_Full<-rbind.fill(List_Sens_Pre)
View(Pre_Data_Full)
Pre_Data_Full %>%
filter(Location=="Donated")
Pre_Data_Full<-rbind.fill(datalistPre_days)
View(Pre_Data_Full)
Pre_Data_Full<-rbind.fill(datalistPre_days)
Pre_Data_Full<-rbind.fill(List_Sens_Pre)
Pre_Data_Full<-rbind.fill(datalistPre_days)
Pre_Data_Full %>%
filter(Location=="Donated")
Pre_Data_Full %>%
filter(Location=="Shared")
View(Pre_Data_Full)
#SummaryLisr = List_Sens_Fr
#FoodType= = "Fruit"
#1. Start from here
Individual_Analysis_Fr<-rbind.fill(List_Sens_Pre)
#Adding Type Column
Individual_Analysis_Fr$Type<-FoodType
#2. find the dupplicates
#this step filters replicated based on the ID
Individual_Analysis_Fr<-Individual_Analysis_Fr %>%
group_by(ID) %>%
filter(TotServices==max(TotServices))
#3
AnalysysDF<-Individual_Analysis_Fr
#SummaryLisr = List_Sens_Fr
#FoodType= = "Fruit"
#1. Start from here
Individual_Analysis_Fr<-rbind.fill(List_Sens_Pre)
#2. find the dupplicates
#this step filters replicated based on the ID
Individual_Analysis_Fr<-Individual_Analysis_Fr %>%
group_by(ID) %>%
filter(TotServices==max(TotServices))
#3
AnalysysDF<-Individual_Analysis_Fr
View(AnalysysDF)
library(scales)
library(forcats)
AnalysysDF %>%
count(Location) %>%
arrange(desc(n)) %>%
mutate(Location = fct_reorder(Location, n)) %>%
ggplot(aes(x =Location, y = n/sum(n)*100))+
scale_y_continuous(labels = scales::percent_format(scale = 1) )+
geom_col()+
labs(x = "Final Food Location", y = "Percent of milk items by location", title= "Final Location for milk-Donation happens end of week")+
theme(plot.title = element_text(hjust = 0.5))+
coord_flip()
AnalysysDF %>%
ggplot(aes(x = TotTime))+
geom_histogram()+
scale_x_continuous(n.breaks= 10)+
labs(x = "Time in Hours", y = "Count ", title= "Time in system by Item week")+
theme(plot.title = element_text(hjust = 0.5))
AnalysysDF %>%
ggplot(aes(x = SpoilageCon))+
geom_histogram(color="darkblue", fill="lightblue")+
geom_vline(xintercept =7, color= "Red")+
scale_x_continuous(n.breaks= 10)+
labs(x = "Phsychotroph Population Log CFU/ml", y = "Count", title= "Levels per milk carton")+
theme(plot.title = element_text(hjust = 0.5))
AnalysysDF %>%
ggplot(aes(x = SpoilageCon))+
geom_histogram(color="darkblue", fill="lightblue")+
geom_vline(xintercept =7, color= "Red")+
scale_x_continuous(n.breaks= 10)+
labs(x = "Phsychotroph Population Log CFU/ml", y = "Count", title= "Levels per milk carton")+
theme(plot.title = element_text(hjust = 0.5))
AnalysysDF %>%
ggplot(aes(y = SpoilageCon, x= TotTime))+
geom_point( size =2, fill = "skyblue", shape = 21, alpha = 0.7, fill = "blue")+
geom_hline(yintercept =7, color= "Red")+
facet_wrap(.~Location, scales = "free_x")+
labs(x = "Time in System", y = "Phsychotroph Population Log CFU/ml", title= "Psychotrophic Population vs total time in system, milk Items- Week")+
scale_y_continuous(n.breaks= 10)+
scale_x_continuous(n.breaks= 10)+
theme(plot.title = element_text(hjust = 0.5))
#Setting Working Directory-------------------------------------
#setwd("C:/Users/gareyes3/Documents/GitHub/Share-Table-Milk/R")
#setwd("G:/Share Table QMRA/Share-Table-QMRA/R")
#setwd(getSrcDirectory()[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #Set working directory to the path of document
#Setting Working Directory-------------------------------------
#setwd("C:/Users/gareyes3/Documents/GitHub/Share-Table-Milk/R")
#setwd("G:/Share Table QMRA/Share-Table-QMRA/R")
#setwd(getSrcDirectory()[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #Set working directory to the path of document
#Opening Libary and Inputs-------------------------------------
source("Util_Library.R")
source("Functions_Full_Analysis.R")
#Inputs and Source Files-------------------------------------
#Inputs
source("Main_Loop.R")
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
source("Util_Output_Functions.R")
#Running Loop First:-------------------------------------
start_time<-Sys.time()
source("Main_Loops2.R")
#SummaryLisr = List_Sens_Fr
#FoodType= = "Fruit"
#1. Start from here
Individual_Analysis_Fr<-rbind.fill(List_Sens_Pre)
#2. find the dupplicates
#this step filters replicated based on the ID
Individual_Analysis_Fr<-Individual_Analysis_Fr %>%
group_by(ID) %>%
filter(TotServices==max(TotServices))
#3
AnalysysDF<-Individual_Analysis_Fr
library(scales)
library(forcats)
AnalysysDF %>%
count(Location) %>%
arrange(desc(n)) %>%
mutate(Location = fct_reorder(Location, n)) %>%
ggplot(aes(x =Location, y = n/sum(n)*100))+
scale_y_continuous(labels = scales::percent_format(scale = 1) )+
geom_col()+
labs(x = "Final Food Location", y = "Percent of milk items by location", title= "Final Location for milk-Donation happens end of week")+
theme(plot.title = element_text(hjust = 0.5))+
coord_flip()
library(scales)
library(forcats)
AnalysysDF %>%
count(Location) %>%
arrange(desc(n)) %>%
mutate(Location = fct_reorder(Location, n)) %>%
ggplot(aes(x =Location, y = n/sum(n)*100))+
scale_y_continuous(labels = scales::percent_format(scale = 1) )+
geom_col()+
labs(x = "Final Food Location", y = "Percent of milk items by location", title= "Final Location for milk-Donation happens end of week")+
theme(plot.title = element_text(hjust = 0.5))+
coord_flip()
AnalysysDF %>%
ggplot(aes(x = TotTime))+
geom_histogram()+
scale_x_continuous(n.breaks= 10)+
labs(x = "Time in Hours", y = "Count ", title= "Time in system by Item week")+
theme(plot.title = element_text(hjust = 0.5))
AnalysysDF %>%
ggplot(aes(x = SpoilageCon))+
geom_histogram(color="darkblue", fill="lightblue")+
geom_vline(xintercept =7, color= "Red")+
scale_x_continuous(n.breaks= 10)+
labs(x = "Phsychotroph Population Log CFU/ml", y = "Count", title= "Levels per milk carton")+
theme(plot.title = element_text(hjust = 0.5))
AnalysysDF %>%
ggplot(aes(y = SpoilageCon, x= TotTime))+
geom_point( size =2, fill = "skyblue", shape = 21, alpha = 0.7, fill = "blue")+
geom_hline(yintercept =7, color= "Red")+
facet_wrap(.~Location, scales = "free_x")+
labs(x = "Time in System", y = "Phsychotroph Population Log CFU/ml", title= "Psychotrophic Population vs total time in system, milk Items- Week")+
scale_y_continuous(n.breaks= 10)+
scale_x_continuous(n.breaks= 10)+
theme(plot.title = element_text(hjust = 0.5))
View(AnalysysDF)
AnalysysDF %>%
ggplot(aes(y = SpoilageCon, x= TotTime, color = ConsumedAt))+
geom_point( size =2, fill = "skyblue", shape = 21, alpha = 0.7, fill = "blue")+
geom_hline(yintercept =7, color= "Red")+
facet_wrap(.~Location, scales = "free_x")+
labs(x = "Time in System", y = "Phsychotroph Population Log CFU/ml", title= "Psychotrophic Population vs total time in system, milk Items- Week")+
scale_y_continuous(n.breaks= 10)+
scale_x_continuous(n.breaks= 10)+
theme(plot.title = element_text(hjust = 0.5))
AnalysysDF %>%
ggplot(aes(y = SpoilageCon, x= TotTime, fill = ConsumedAt))+
geom_point( size =2, fill = "skyblue", shape = 21, alpha = 0.7, fill = "blue")+
geom_hline(yintercept =7, color= "Red")+
facet_wrap(.~Location, scales = "free_x")+
labs(x = "Time in System", y = "Phsychotroph Population Log CFU/ml", title= "Psychotrophic Population vs total time in system, milk Items- Week")+
scale_y_continuous(n.breaks= 10)+
scale_x_continuous(n.breaks= 10)+
theme(plot.title = element_text(hjust = 0.5))
AnalysysDF %>%
ggplot(aes(y = SpoilageCon, x= TotTime, color = ConsumedAt))+
geom_point( size =2, fill = "skyblue", shape = 21, alpha = 0.7, fill = "blue")+
geom_hline(yintercept =7, color= "Red")+
facet_wrap(.~Location, scales = "free_x")+
labs(x = "Time in System", y = "Phsychotroph Population Log CFU/ml", title= "Psychotrophic Population vs total time in system, milk Items- Week")+
scale_y_continuous(n.breaks= 10)+
scale_x_continuous(n.breaks= 10)+
theme(plot.title = element_text(hjust = 0.5))
AnalysysDF %>%
ggplot(aes(y = SpoilageCon, x= TotTime, color = ConsumedAt))+
geom_point( size =2, fill = "skyblue", shape = 21, alpha = 0.7, fill = "blue")+
geom_hline(yintercept =7, color= "Red")+
facet_wrap(.~Location, scales = "free_x")+
labs(x = "Time in System", y = "Phsychotroph Population Log CFU/ml", title= "Psychotrophic Population vs total time in system, milk Items- Week")+
scale_y_continuous(n.breaks= 10)+
scale_x_log10(n.breaks= 10)+
theme(plot.title = element_text(hjust = 0.5))
AnalysysDF %>%
ggplot(aes(y = SpoilageCon, x= TotTime, color = ConsumedAt))+
geom_point( size =2, fill = "skyblue", shape = 21, alpha = 0.7, fill = "blue")+
geom_hline(yintercept =7, color= "Red")+
facet_wrap(.~Location, scales = "free_x")+
labs(x = "Time in System", y = "Phsychotroph Population Log CFU/ml", title= "Psychotrophic Population vs total time in system, milk Items- Week")+
scale_y_continuous()+
scale_x_log10(n.breaks= 10)+
theme(plot.title = element_text(hjust = 0.5))
