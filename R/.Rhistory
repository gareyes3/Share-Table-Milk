AnalysysDF %>%
filter(Shared == "Yes") %>%
summarize(sum(SpoilageCon>6))
AnalysysDF
24/1131016 *100
AnalysysDF %>%
#filter(Shared == "Yes") %>%
summarize(sum(SpoilageCon>6))
AnalysysDF %>%
filter(Shared == "Yes")
24/258558 *100
AnalysysDF %>%
filter(Shared == "No")
(24/258558) *100
(24/1131016) *100
(24/1131016) *100
(24/258558) *100
(24/258558) *100
(24/1131016) *100
AnalysysDF %>%
(Shared == "No") %>%
summarize(median(TotTime), q25 = quantile(TotTime, 0.025), q975 = quantile(TotTime, 0.975))
AnalysysDF %>%
filter(Shared == "No") %>%
summarize(median(TotTime), q25 = quantile(TotTime, 0.025), q975 = quantile(TotTime, 0.975))
AnalysysDF %>%
filter(Shared == "Yes") %>%
summarize(median(SpoilageCon - InSpoilageCon), q25 = quantile(SpoilageCon - InSpoilageCon, 0.025), q975 = quantile(SpoilageCon - InSpoilageCon, 0.975))
AnalysysDF %>%
filter(Shared == "Yes") %>%
summarize(median(TotTime), q25 = quantile(TotTime, 0.025), q975 = quantile(TotTime, 0.975))
AnalysysDF %>%
#filter(Shared == "Yes") %>%
summarize(median(TotTime), q25 = quantile(TotTime, 0.025), q975 = quantile(TotTime, 0.975))
AnalysysDF %>%
filter(Shared == "Yes") %>%
summarize(median(SpoilageCon - InSpoilageCon), q25 = quantile(SpoilageCon - InSpoilageCon, 0.025), q975 = quantile(SpoilageCon - InSpoilageCon, 0.975))
AnalysysDF %>%
filter(Shared == "No") %>%
summarize(median(SpoilageCon - InSpoilageCon), q25 = quantile(SpoilageCon - InSpoilageCon, 0.025), q975 = quantile(SpoilageCon - InSpoilageCon, 0.975))
AnalysysDF %>%
#filter(Shared == "No") %>%
summarize(median(SpoilageCon - InSpoilageCon), q25 = quantile(SpoilageCon - InSpoilageCon, 0.025), q975 = quantile(SpoilageCon - InSpoilageCon, 0.975))
AnalysysDF %>%
filter(Location == "Consumed") %>%
filter(TotTime<125)
871105/1131016
AnalysysDF %>%
filter(Location == "Consumed") %>%
filter(TotTime<1440)
871105/1131016
AnalysysDF %>%
filter(Location == "Consumed") %>%
filter(TotTime<2280)
(964226-(871105))/1131016
AnalysysDF %>%
filter(Location == "Consumed") %>%
filter(TotTime<4320)
(968,611-964226)/1131016
(968611-964226)/1131016
AnalysysDF %>%
filter(Location == "Consumed")
((871105))/969021
(964226-(871105))/969021
(968611-964226)/969021
(964226-(871105))/969021
(((871105))/969021) *100
(964226-(871105))/969021) *100
((964226-(871105))/969021) *100
((968611-964226)/969021)*100
AnalysysDF %>%
filter(Location == "Consumed") %>%
filter(TotTime<5760)
((968993-968611)/969021)*100
AnalysysDF %>%
filter(Location == "Consumed") %>%
filter(TotTime<7200)
((969021-968611)/969021)*100
((969021-968993)/969021)*100
p_1_logAnalysysDF[1:1000,]%>%
ggplot(aes(y = SpoilageCon, x= TotTime, fill= Shared, shape = Shared))+
geom_point( size =2, alpha = 0.7, color = "black")+
geom_hline(yintercept =6)+
geom_text(aes(100,6.5,label = "Quality Threshold = 6.0"), color = "black", size  = 3,check_overlap = TRUE)+
facet_wrap(.~Location)+
labs(x = "Residence Time in Cafeteria System (min)", y = expression("Pseudomonas poae population (log"[10]~"CFU/ml)"))+
scale_y_continuous()+
scale_shape_manual(values = c(21,23))+
scale_fill_manual(values = c("coral1", "seagreen3"))+
scale_x_log10(n.breaks= 10)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(angle = -45, vjust = -0.3))+
theme(legend.position="bottom")+
geom_segment(aes(x = 1440 , y = -Inf, xend = 1440, yend = 6), linetype = "dotted")+
geom_segment(aes(x = 2880 , y = -Inf, xend = 2880, yend = 6), linetype = "dotted") +
geom_segment(aes(x = 4320 , y = -Inf, xend = 4320, yend = 6), linetype = "dotted") +
geom_segment(aes(x = 0 , y = -Inf, xend = 0, yend = 6), linetype = "dotted")  +
geom_segment(aes(x = 5760 , y = -Inf, xend = 5760, yend = 6), linetype = "dotted")
p_1_log<-AnalysysDF%>%
ggplot(aes(y = SpoilageCon, x= TotTime, fill= Shared, shape = Shared))+
geom_point( size =2, alpha = 0.7, color = "black")+
geom_hline(yintercept =6)+
geom_text(aes(100,6.5,label = "Quality Threshold = 6.0"), color = "black", size  = 3,check_overlap = TRUE)+
facet_wrap(.~Location)+
labs(x = "Residence Time in Cafeteria System (min)", y = expression("Pseudomonas poae population (log"[10]~"CFU/ml)"))+
scale_y_continuous()+
scale_shape_manual(values = c(21,23))+
scale_fill_manual(values = c("coral1", "seagreen3"))+
scale_x_log10(n.breaks= 10)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(angle = -45, vjust = -0.3))+
theme(legend.position="bottom")+
geom_segment(aes(x = 1440 , y = -Inf, xend = 1440, yend = 6), linetype = "dotted")+
geom_segment(aes(x = 2880 , y = -Inf, xend = 2880, yend = 6), linetype = "dotted") +
geom_segment(aes(x = 4320 , y = -Inf, xend = 4320, yend = 6), linetype = "dotted") +
geom_segment(aes(x = 0 , y = -Inf, xend = 0, yend = 6), linetype = "dotted")  +
geom_segment(aes(x = 5760 , y = -Inf, xend = 5760, yend = 6), linetype = "dotted")
ggsave("Share Table Spoilage-2.0 log.jpg", width =8, height = 5, units = "in", dpi = 300)
#Summaries
AnalysysDF %>%
filter(Location == "Consumed") %>%
nrow()
969021/1131016
AnalysysDF %>%
filter(Location == "Discarded") %>%
nrow()
131845/1131016
AnalysysDF %>%
filter(Location == "Donated") %>%
nrow()
30150/1131016
131845/1131016
#Summaries
AnalysysDF %>%
filter(Location == "Consumed") %>%
filter(TotTime<1440)
#Summaries
AnalysysDF %>%
filter(Location == "Consumed") %>%
filter(TotTime<1440) %>%
nrow()
871105/969021
871105/969021
#Summaries
AnalysysDF %>%
filter(Location == "Consumed") %>%
#filter(TotTime<1440) %>%
filter(TotTime>1440 && TotTime<2280) %>%
nrow()
93121/969021
#Summaries
AnalysysDF %>%
filter(Location == "Consumed") %>%
#filter(TotTime<1440) %>%
#filter(TotTime>1440 && TotTime<2280) %>%
filter(TotTime>1440*2 && TotTime<1440*3) %>%
nrow()
4385/969021
#Summaries
AnalysysDF %>%
filter(Location == "Consumed") %>%
#filter(TotTime<1440) %>%
#filter(TotTime>1440 && TotTime<2280) %>%
#filter(TotTime>1440*2 && TotTime<1440*3) %>%
filter(TotTime>1440*3 && TotTime<1440*4) %>%
nrow()
382/969021
(382/969021)*100
#Summaries
AnalysysDF %>%
filter(Location == "Consumed") %>%
#filter(TotTime<1440) %>%
#filter(TotTime>1440 && TotTime<2280) %>%
#filter(TotTime>1440*2 && TotTime<1440*3) %>%
#filter(TotTime>1440*3 && TotTime<1440*4) %>%
filter(TotTime>1440*4 && TotTime<1440*5) %>%
nrow()
(28/969021)*100
AnalysysDF %>%
filter(Location == "Discarded") %>%
filter(TotTime<1440) %>%
#filter(TotTime>1440 && TotTime<2280) %>%
#filter(TotTime>1440*2 && TotTime<1440*3) %>%
#filter(TotTime>1440*3 && TotTime<1440*4) %>%
#filter(TotTime>1440*4 && TotTime<1440*5) %>%
nrow()
(118977/131845)*100
AnalysysDF %>%
filter(Location == "Discarded") %>%
#filter(TotTime<1440) %>%
filter(TotTime>1440 && TotTime<2280) %>%
#filter(TotTime>1440*2 && TotTime<1440*3) %>%
#filter(TotTime>1440*3 && TotTime<1440*4) %>%
#filter(TotTime>1440*4 && TotTime<1440*5) %>%
nrow()
(1228/131845)*100
(12228/131845)*100
AnalysysDF %>%
filter(Location == "Discarded") %>%
#filter(TotTime<1440) %>%
#filter(TotTime>1440 && TotTime<2280) %>%
filter(TotTime>1440*2 && TotTime<1440*3) %>%
#filter(TotTime>1440*3 && TotTime<1440*4) %>%
#filter(TotTime>1440*4 && TotTime<1440*5) %>%
nrow()
(587/131845)*100
AnalysysDF %>%
filter(Location == "Discarded") %>%
#filter(TotTime<1440) %>%
#filter(TotTime>1440 && TotTime<2280) %>%
#filter(TotTime>1440*2 && TotTime<1440*3) %>%
filter(TotTime>1440*3 && TotTime<1440*4) %>%
#filter(TotTime>1440*4 && TotTime<1440*5) %>%
nrow()
(50/131845)*100
AnalysysDF %>%
filter(Location == "Discarded") %>%
#filter(TotTime<1440) %>%
#filter(TotTime>1440 && TotTime<2280) %>%
#filter(TotTime>1440*2 && TotTime<1440*3) %>%
#filter(TotTime>1440*3 && TotTime<1440*4) %>%
filter(TotTime>1440*4 && TotTime<1440*5) %>%
nrow()
(3/131845)*100
AnalysysDF %>%
filter(Location == "Donated") AnalysysDF %>%
AnalysysDF %>%
filter(Location == "Donated") AnalysysDF %>%
AnalysysDF %>%
filter(Location == "Donated") %>%
filter(TotTime<1440) %>%
#filter(TotTime>1440 && TotTime<2280) %>%
#filter(TotTime>1440*2 && TotTime<1440*3) %>%
#filter(TotTime>1440*3 && TotTime<1440*4) %>%
#filter(TotTime>1440*4 && TotTime<1440*5) %>%
nrow()
(28028/30150)*100
AnalysysDF %>%
filter(Location == "Donated") %>%
#filter(TotTime<1440) %>%
filter(TotTime>1440 && TotTime<2280) %>%
#filter(TotTime>1440*2 && TotTime<1440*3) %>%
#filter(TotTime>1440*3 && TotTime<1440*4) %>%
#filter(TotTime>1440*4 && TotTime<1440*5) %>%
nrow()
(1836/30150)*100
AnalysysDF %>%
filter(Location == "Donated") %>%
#filter(TotTime<1440) %>%
#filter(TotTime>1440 && TotTime<2280) %>%
filter(TotTime>1440*2 && TotTime<1440*3) %>%
#filter(TotTime>1440*3 && TotTime<1440*4) %>%
#filter(TotTime>1440*4 && TotTime<1440*5) %>%
nrow()
(243/30150)*100
AnalysysDF %>%
filter(Location == "Donated") %>%
#filter(TotTime<1440) %>%
#filter(TotTime>1440 && TotTime<2280) %>%
#filter(TotTime>1440*2 && TotTime<1440*3) %>%
filter(TotTime>1440*3 && TotTime<1440*4) %>%
#filter(TotTime>1440*4 && TotTime<1440*5) %>%
nrow()
(40/30150)*100
AnalysysDF %>%
filter(Location == "Donated") %>%
#filter(TotTime<1440) %>%
#filter(TotTime>1440 && TotTime<2280) %>%
#filter(TotTime>1440*2 && TotTime<1440*3) %>%
#filter(TotTime>1440*3 && TotTime<1440*4) %>%
filter(TotTime>1440*4 && TotTime<1440*5) %>%
nrow()
(3/30150)*100
(3/131845)*100
(3/30150)*100
(3/131845)*100
(3/30150)*100
setwd("~/GitHub/CPS-Farm-To-Facility-Cilantro")
library(tidyverse)
library(reshape2)
library(readr)
Unc_Conts<-read_csv("Data/Water_Testing_Analysis_R4.csv")
Unc_Conts<-Unc_Conts %>%
select(-...1) %>%
mutate(N10Lsamples= as.factor(N10Lsamples)) %>%
group_by(N10Lsamples, Conts) %>%
summarise(median = median(PDetect), q05 = quantile(PDetect, 0.05), q95 = quantile(PDetect, 0.95))
View(Unc_Conts)
Unc_Conts<-read_csv("Data/Product_Testing_Analysis_R4.csv")
#Unc_Conts$Conts<- log10(Unc_Conts$Conts)
#NON LOG
Unc_Conts<-Unc_Conts %>%
mutate(Conts = Conts/(454*22000)) %>%
select(-...1) %>%
mutate(N25gsamples= as.factor(N25gsamples)) %>%
group_by(N25gsamples, Conts) %>%
summarise(median = median(PDetect), q05 = quantile(PDetect, 0.05), q95 = quantile(PDetect, 0.95))
knitr::opts_chunk$set(echo = TRUE)
#together:
H_DPT<-read.csv(file = "Detection_Rates_High_DPT_LOC.csv")
H_DPT$Level = "Contamination - High"
H_DPT$Type = "Produce Testing - Daily"
H_FPT<-read.csv(file = "Detection_Rates_High_FPT_LOC.csv")
H_FPT$Level = "Contamination - High"
H_FPT$Type = "Produce Testing 1 sample - End"
H_FPT_10s<-read.csv(file = "Detection_Rates_High_10s_FPT_LOC.csv")
H_FPT_10s$Level = "Contamination - High"
H_FPT_10s$Type = "Produce Testing 10 samples - End"
H_FPT_45s<-read.csv(file = "Detection_Rates_High_45s_FPT_LOC.csv")
H_FPT_45s$Level = "Contamination - High"
H_FPT_45s$Type = "Produce Testing 45 samples - End"
L_DPT<-read.csv(file = "Detection_Rates_Low_DPT_LOC.csv")
L_DPT$Level = "Contamination - Low"
L_DPT$Type = "Produce Testing - Daily"
L_FPT<-read.csv(file = "Detection_Rates_Low_FPT_LOC.csv")
L_FPT$Level = "Contamination - Low"
L_FPT$Type = "Produce Testing 1 sample - End"
L_FPT_10s<-read.csv(file = "Detection_Rates_Low_10s_FPT_LOC.csv")
L_FPT_10s$Level = "Contamination - Low"
L_FPT_10s$Type = "Produce Testing 10 samples - End"
L_FPT_45s<-read.csv(file = "Detection_Rates_Low_45s_FPT_LOC.csv")
L_FPT_45s$Level = "Contamination - Low"
L_FPT_45s$Type = "Produce Testing 45 samples - End"
Detection_Rates_Binded = rbind(H_DPT,H_FPT,L_DPT,L_FPT,L_FPT_10s,H_FPT_10s,L_FPT_45s,H_FPT_45s)
Detection_Rates_Binded<-Detection_Rates_Binded[,-1]
Detection_Rates_Binded$Cluster<-round(Detection_Rates_Binded$Cluster,1)
Detection_Rates_Binded$Cluster<-as.factor(Detection_Rates_Binded$Cluster)
View(Detection_Rates_Binded)
View(Detection_Rates_Binded)
View(H_DPT)
View(Unc_Conts)
setwd("C:/Users/gareyes3/Documents/GitHub/Share-Table-Milk/R")
#Setting Working Directory-------------------------------------
#setwd("C:/Users/gareyes3/Documents/GitHub/Share-Table-Milk/R")
#setwd("G:/Share Table QMRA/Share-Table-QMRA/R")
#setwd(getSrcDirectory()[1])
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #Set working directory to the path of document
#Opening Libary and Inputs-------------------------------------
source("Util_Library.R")
source("Functions_Full_Analysis.R")
library(tidyverse)
#Inputs and Source Files-------------------------------------
#Inputs
source("Main_Loop.R")
source("Input_Static.R")
source("Input_Functions.R")
source("Util_DFFunctions.R")
source("Util_DFWeekCreation.R")
source("Util_Counter&Lists.R")
#Functions
source("Util_Functions.R")
source("Util_CCFunctions2.R")
source("Util_VisualFunctions.R")
source("Util_Output_Functions.R")
Df_RT_MT<-read.csv("Pedicted Time and Temp Profiles/Df_RT_MT.csv")
#Function for growth and lag phase
new_growth_rate<-function(newTemp, oldMu,oldTemp = 6, T0 = -4.15){
newMu<-((newTemp-T0)/(oldTemp-T0))* oldMu
return (newMu)
}
#Calculation of the new lag time.
new_lag_time <- function (newTemp, oldLag, oldTemp = 6, T0 = -4.15) {
numerator <- oldTemp -T0
denom <- newTemp - T0
newLag <- ( (numerator / denom)^2) * oldLag
return(newLag)
}
#Not in use, function to create a data frame based on interval and initial and final temperature
Time_Temp_Creation<-function(Total_Time, Interval, Initial_Temperature, Final_Temperature){
Time_Temp_df<-data.frame("min"= seq(0,Total_Time,by = Interval),
"tempM"  = seq(Initial_Temperature,Final_Temperature, by = ((Final_Temperature - Initial_Temperature)/(length(seq(0,Total_Time,by = Interval)) - 1) )))
}
Time_Temp_Creation_Var<-function(Total_Time, Interval, Mean_Temperature, SD_Temperature){
Time_Temp_df<-data.frame("min"= seq(0,Total_Time,by = Interval),
"tempM"= rnorm(n =Total_Time+1, mean = Mean_Temperature, sd= SD_Temperature))
return (Time_Temp_df)
}
#This function calculates thee growth based on a time and temperature profile for 1 specific milk with R100084 P Paoae
Func_Growth_LagCon<-function(In_Lag_Consumed, Time_Temp_df,Interval, AF){
#In_Lag_Consumed= Total lag time consumed
#Time_Temp_df = dataframe with time and temperature conditions
#Interval = time interval in the time_temp_df in hrs.
Total_Lag_Consumed = In_Lag_Consumed
Total_Growth = 0
old_lag = 0
NMax = 8.14
old_mumax = 0.083508
Growth_V = c()
for (i in 1:nrow(Time_Temp_df)){
if (Total_Lag_Consumed <1 && old_lag!=0){
Lag_t_interval<-new_lag_time(newTemp = Time_Temp_df$MilkTemp[i], oldLag = old_lag)
Lag_Consumed<-Interval/Lag_t_interval
Total_Lag_Consumed<-Total_Lag_Consumed+Lag_Consumed
Growth = 0
} else if (Total_Lag_Consumed>=1 | old_lag == 0){
Growth = ((new_growth_rate(newTemp = Time_Temp_df$MilkTemp[i], oldMu = old_mumax))/2.303)* AF#0.684 #Converted log10 from log ln
Total_Growth = Total_Growth + (Growth*Interval)
}
Growth_V = c(Growth_V,Total_Growth)
#print(length(Growth_V))
}
return(list(Total_Growth,Total_Lag_Consumed,Growth_V))
}
#Buchanan spoilage function
Spoilage_Function_Single_Milk<-function(Cont, Pop_Max, Time_Temp_df, Interval =1/60, AF){
Lag_Consumed = 0
#this function provides two outputs, the total growth, and the new updated lag phase consumed.
Output_Milk<-Func_Growth_LagCon(In_Lag_Consumed = Lag_Consumed ,Time_Temp_df = Time_Temp_df,Interval = Interval, AF=AF)
Lag_Consumed = Output_Milk[[2]]
Cont<-Output_Milk[[1]]+Cont
if( Cont>Pop_Max){
Cont = Pop_Max
}
return (list(Cont,Output_Milk[[3]]))
}
#Running Loop First:-------------------------------------
start_time<-Sys.time()
source("Main_Loops2.R")
#AnalysysDF_RON<-AnalysysDF
#SummaryLisr = List_Sens_Fr
#FoodType= = "Fruit"
#1. Start from here
Individual_Analysis_Fr<-rbind.fill(List_Sens_Pre)
#2. find the duplicates
#this step filters replicated based on the ID
Individual_Analysis_Fr<-Individual_Analysis_Fr %>%
group_by(ID) %>%
filter(TotServices==max(TotServices))
#3
AnalysysDF<-Individual_Analysis_Fr
AnalysysDF_2<-Individual_Analysis_Fr
#Adding the time of the services for those milks that were added to the service line during the lunch period.
AnalysysDF[AnalysysDF$Initial.Service>1,]
AnalysysDF$TotTime<-AnalysysDF$TotTime+(as.integer(AnalysysDF$Initial.Service)-1)*75
AnalysysDF$Shared<-ifelse(AnalysysDF$STtimes>0, "Yes", "No")
Output_Milk<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_RT_MT, Interval =1/60,AF = 1.32)
Changes_Over_Time<-Output_Milk[[2]]
NMax = 8.14
for (i in 1:nrow(AnalysysDF)){
In_Cont<-AnalysysDF$InSpoilageCon[i]
Time<-AnalysysDF$TotTime[i]
if (Time == 0){
Total_Growth = 0
}else{
Total_Growth<-Changes_Over_Time[Time]
}
Final_Con<-In_Cont+Total_Growth
if(Final_Con>NMax){
Final_Con <- NMax
}
AnalysysDF$SpoilageCon[i]<-Final_Con
}
p_1_log
p_1_log
p_1_log<-AnalysysDF%>%
ggplot(aes(y = SpoilageCon, x= TotTime, fill= Shared, shape = Shared))+
geom_point( size =2, alpha = 0.7, color = "black")+
geom_hline(yintercept =6)+
geom_text(aes(100,6.5,label = "Quality Threshold = 6.0"), color = "black", size  = 3,check_overlap = TRUE)+
facet_wrap(.~Location)+
labs(x = "Residence Time in Cafeteria System (min)", y = expression("Pseudomonas poae population (log"[10]~"CFU/ml)"))+
scale_y_continuous()+
scale_shape_manual(values = c(21,23))+
scale_fill_manual(values = c("coral1", "seagreen3"))+
scale_x_log10(n.breaks= 10)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(angle = -45, vjust = -0.3))+
theme(legend.position="bottom")+
geom_segment(aes(x = 1440 , y = -Inf, xend = 1440, yend = 6,linetype = "Start of Day"))+
geom_segment(aes(x = 2880 , y = -Inf, xend = 2880, yend = 6), linetype = "dotted") +
geom_segment(aes(x = 4320 , y = -Inf, xend = 4320, yend = 6), linetype = "dotted") +
geom_segment(aes(x = 0 , y = -Inf, xend = 0, yend = 6), linetype = "dotted")  +
geom_segment(aes(x = 5760 , y = -Inf, xend = 5760, yend = 6), linetype = "dotted") +
scale_linetype_manual(name = "",values = c("dotted"))
p_1_log
p_1<-AnalysysDF%>%
ggplot(aes(y = SpoilageCon, x= TotTime, fill= Shared, shape = Shared))+
geom_point( size =2, alpha = 0.7, color = "black")+
geom_hline(yintercept =6)+
geom_text(aes(2000,6.5,label = "Quality Threshold = 6.0"), color = "black", size  = 3,check_overlap = TRUE)+
facet_wrap(.~Location)+
labs(x = "Residence Time in Cafeteria System (min)", y = expression("Pseudomonas poae population (log"[10]~"CFU/ml)"))+
scale_y_continuous()+
scale_shape_manual(values = c(21,23))+
scale_fill_manual(values = c("coral1", "seagreen3"))+
#scale_x_log10(n.breaks= 12)+
theme_bw() +
theme(plot.title = element_text(hjust = 0.5))+
theme(axis.text.x = element_text(angle = -45, vjust = -0.3))+
theme(legend.position="bottom")+
geom_segment(aes(x = 1440 , y = -Inf, xend = 1440, yend = 6,linetype = "Start of Day") )+
geom_segment(aes(x = 2880 , y = -Inf, xend = 2880, yend = 6), linetype = "dotted") +
geom_segment(aes(x = 4320 , y = -Inf, xend = 4320, yend = 6), linetype = "dotted") +
geom_segment(aes(x = 0 , y = -Inf, xend = 0, yend = 6), linetype = "dotted") +
geom_segment(aes(x = 5760 , y = -Inf, xend = 5760, yend = 6), linetype = "dotted") +
scale_linetype_manual(name = "",values = c("dotted"))
p_1
AnalysysDF %>%
mutate(Change_Cont = SpoilageCon-InSpoilageCon) %>%
ggplot(aes(y = Change_Cont, x= TotTime, fill = Shared))+
geom_point( size =2, shape = 21, alpha = 0.7)+
facet_wrap(.~Location)+
labs(x = "Residence Time in Cafeteria System (min)", y = expression("Pseudomonas poae population Change (log"[10]~"CFU/ml"))+
scale_y_continuous()+
scale_x_log10(n.breaks= 10)+
theme(plot.title = element_text(hjust = 0.5))+
theme_bw()+
theme(legend.position="bottom")+
theme(axis.text.x = element_text(angle = -45, vjust = -0.3))
