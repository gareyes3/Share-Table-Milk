In_Lag_Consumed<-Milkdf$LagCon[i]
ST_Iter<-Milkdf$Species[i]
Pop_Max<-look_for_st(ST= ST_Iter,par_of_int = "Nmax")
Old_Lag<-look_for_st(ST= ST_Iter,par_of_int = "lagt")
Oldmumax<-look_for_st(ST= ST_Iter,par_of_int = "mumax")
#GModel_Run<-look_for_st(ST= ST_Iter,par_of_int = "GModel")
#Creating Time Temp Df
GModel_Run<-"Bu"
Temperature_Static<- rlaplace(1,m=4.06,s=2.31)
while (Temperature_Static > 15 | Temperature_Static < -1) {
Temperature_Static<- rlaplace(1,m=4.06,s=2.31)
}
Newlag<-new_lag_time(newTemp =Temperature_Static,oldLag = Old_Lag)
NewMumax<-(new_growth_rate(newTemp = Temperature_Static,oldMu = Oldmumax))*0.685
if(GModel_Run=="G"){
Pop<-gompertz_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
} else if (GModel_Run =="B"){
Pop<-baranyi_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
}else if (GModel_Run =="Bu"){
Pop<-buchanan_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
}
Milkdf$SpoilageCon[i]<-Pop
}
hist(Milkdf$SpoilageCon,  ylim=c(0,800), 35)
mean(Milkdf$SpoilageCon)
sum(Milkdf$SpoilageCon>5)
#Creating a dataframe where the 17 species have therr relevant parameters
#Creating a dataframe with milk values.
Milkdf<-data.frame("MilkID" = seq(0,1000),"SpoilageCon" =NA, "LagCon" = 0, "Species" = NA)
#Species_St<-c(13,9,52,23,100,6,24,48,36,17,81,75,56,92,102,2,41)
#lag_h<-c(25.2,0,11.6,25.5,0,20.9,7.4,34.9,0,26.3,28.4,0,11.2,12.3,0,20.4,7.4)
#mumax<-c(0.1,0.107,0.089,0.125,0.141,0.098,0.086,0.081,0.114,0.079,0.078,0.085,0.122,0.133,0.058,0.094,0.075)
#Nmax<-c(9.07,9.39,8.38,8.08,8.04,7.81,8.32,8.51,9.04,9.08,9.20,8.57,8.24,8.89,7.82,7.35,8.17)
#GModel<-c("G","G","G","G","G","G","G","B","G","G","G","G","B", "G","G","G","B")
#Frequencies and adjusted frequencies based on the 17 strains to randomize
#freq<-c(8.93,8.93,6.97,4.36,3.05,1.31,1.09,0.22,1.31,1.53,0.65,0.87,1.31,0.22,0.22,2.18,2.18)
#freq<-freq/sum(freq)
#SpeciesDF<-data.frame(Species_St,lag_h,mumax,Nmax, GModel)
SpeciesDF<-read_csv("SpeciesData.csv")
Prevs<-c(8.93,0.65,1.53,0.87,8.93,0.22,1.31,1.31,0.22,0.22,2.18,2.18)
Prevs<-Prevs/sum(Prevs)
SpeciesDF$Prev<-Prevs
SpeciesDF<-SpeciesDF %>%
rename(Species_St = ST)
#Assigning Milk DF
Milkdf$Species<-sample(SpeciesDF$Species_St,size = length(Milkdf$Species), prob = SpeciesDF$Prev, replace = T)
Milkdf$SpoilageCon<-rtruncnorm(n = length(Milkdf$SpoilageCon),b = 3, mean =0.3817872, sd=1.108859)
#hist(rtruncnorm(1000, b = 3, mean =0.3817872, sd=1.108859))
hist(Milkdf$SpoilageCon)
Time_Model<-24*14
for(i in 1:nrow(Milkdf)){
In_Lag_Consumed<-Milkdf$LagCon[i]
ST_Iter<-Milkdf$Species[i]
Pop_Max<-look_for_st(ST= ST_Iter,par_of_int = "Nmax")
Old_Lag<-look_for_st(ST= ST_Iter,par_of_int = "lagt")
Oldmumax<-look_for_st(ST= ST_Iter,par_of_int = "mumax")
#GModel_Run<-look_for_st(ST= ST_Iter,par_of_int = "GModel")
#Creating Time Temp Df
GModel_Run<-"Bu"
Temperature_Static<- rlaplace(1,m=4.06,s=2.31)
while (Temperature_Static > 15 | Temperature_Static < -1) {
Temperature_Static<- rlaplace(1,m=4.06,s=2.31)
}
Newlag<-new_lag_time(newTemp =Temperature_Static,oldLag = Old_Lag)
NewMumax<-((new_growth_rate(newTemp = Temperature_Static,oldMu = Oldmumax))/2.303)*0.685
if(GModel_Run=="G"){
Pop<-gompertz_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
} else if (GModel_Run =="B"){
Pop<-baranyi_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
}else if (GModel_Run =="Bu"){
Pop<-buchanan_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
}
Milkdf$SpoilageCon[i]<-Pop
}
end_time <- Sys.time()
end_time - start_time
hist(Milkdf$SpoilageCon,  ylim=c(0,800), 35)
mean(Milkdf$SpoilageCon)
sum(Milkdf$SpoilageCon>5)
#Creating a dataframe where the 17 species have therr relevant parameters
#Creating a dataframe with milk values.
Milkdf<-data.frame("MilkID" = seq(0,10000),"SpoilageCon" =NA, "LagCon" = 0, "Species" = NA)
#Species_St<-c(13,9,52,23,100,6,24,48,36,17,81,75,56,92,102,2,41)
#lag_h<-c(25.2,0,11.6,25.5,0,20.9,7.4,34.9,0,26.3,28.4,0,11.2,12.3,0,20.4,7.4)
#mumax<-c(0.1,0.107,0.089,0.125,0.141,0.098,0.086,0.081,0.114,0.079,0.078,0.085,0.122,0.133,0.058,0.094,0.075)
#Nmax<-c(9.07,9.39,8.38,8.08,8.04,7.81,8.32,8.51,9.04,9.08,9.20,8.57,8.24,8.89,7.82,7.35,8.17)
#GModel<-c("G","G","G","G","G","G","G","B","G","G","G","G","B", "G","G","G","B")
#Frequencies and adjusted frequencies based on the 17 strains to randomize
#freq<-c(8.93,8.93,6.97,4.36,3.05,1.31,1.09,0.22,1.31,1.53,0.65,0.87,1.31,0.22,0.22,2.18,2.18)
#freq<-freq/sum(freq)
#SpeciesDF<-data.frame(Species_St,lag_h,mumax,Nmax, GModel)
SpeciesDF<-read_csv("SpeciesData.csv")
Prevs<-c(8.93,0.65,1.53,0.87,8.93,0.22,1.31,1.31,0.22,0.22,2.18,2.18)
Prevs<-Prevs/sum(Prevs)
SpeciesDF$Prev<-Prevs
SpeciesDF<-SpeciesDF %>%
rename(Species_St = ST)
#Assigning Milk DF
Milkdf$Species<-sample(SpeciesDF$Species_St,size = length(Milkdf$Species), prob = SpeciesDF$Prev, replace = T)
Milkdf$SpoilageCon<-rtruncnorm(n = length(Milkdf$SpoilageCon),b = 3, mean =0.3817872, sd=1.108859)
#hist(rtruncnorm(1000, b = 3, mean =0.3817872, sd=1.108859))
hist(Milkdf$SpoilageCon)
buchanan_log10N = function(t,lag,mumax,LOG10N0,LOG10Nmax){
ans <- LOG10N0 + (t >= lag) * (t <= (lag + (LOG10Nmax - LOG10N0) *     log(10)/mumax)) * mumax * (t - lag)/log(10) + (t >= lag) * (t > (lag + (LOG10Nmax - LOG10N0) * log(10)/mumax)) * (LOG10Nmax - LOG10N0)
return(ans)
}
gompertz_log10N = function(t,lag,mumax,LOG10N0,LOG10Nmax) {
ans <- LOG10N0 + (LOG10Nmax - LOG10N0) * exp(-exp(mumax * exp(1) *
(lag - t)/((LOG10Nmax - LOG10N0) * log(10)) + 1))
return(ans)
}
baranyi_log10N = function(t,lag,mumax,LOG10N0,LOG10Nmax) {
ans <- LOG10Nmax + log10((-1 + exp(mumax * lag) + exp(mumax * t))/(exp(mumax * t) - 1 + exp(mumax * lag) * 10^(LOG10Nmax -LOG10N0)))
return(ans)
}
Time_Model<-24*14
for(i in 1:nrow(Milkdf)){
In_Lag_Consumed<-Milkdf$LagCon[i]
ST_Iter<-Milkdf$Species[i]
Pop_Max<-look_for_st(ST= ST_Iter,par_of_int = "Nmax")
Old_Lag<-look_for_st(ST= ST_Iter,par_of_int = "lagt")
Oldmumax<-look_for_st(ST= ST_Iter,par_of_int = "mumax")
#GModel_Run<-look_for_st(ST= ST_Iter,par_of_int = "GModel")
#Creating Time Temp Df
GModel_Run<-"Bu"
Temperature_Static<- rlaplace(1,m=4.06,s=2.31)
while (Temperature_Static > 15 | Temperature_Static < -1) {
Temperature_Static<- rlaplace(1,m=4.06,s=2.31)
}
Newlag<-new_lag_time(newTemp =Temperature_Static,oldLag = Old_Lag)
NewMumax<-((new_growth_rate(newTemp = Temperature_Static,oldMu = Oldmumax)))*0.685
if(GModel_Run=="G"){
Pop<-gompertz_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
} else if (GModel_Run =="B"){
Pop<-baranyi_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
}else if (GModel_Run =="Bu"){
Pop<-buchanan_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
}
Milkdf$SpoilageCon[i]<-Pop
}
end_time <- Sys.time()
end_time - start_time
hist(Milkdf$SpoilageCon,  ylim=c(0,800), 35)
mean(Milkdf$SpoilageCon)
sum(Milkdf$SpoilageCon>5)
####
Growth = ((new_growth_rate(newTemp = Time_Temp_df$Temperature[i], oldMu = old_mumax))/2.303)*0.684 #Converted log10
#Creating a dataframe where the 17 species have therr relevant parameters
#Creating a dataframe with milk values.
Milkdf<-data.frame("MilkID" = seq(0,10000),"SpoilageCon" =NA, "LagCon" = 0, "Species" = NA)
#Species_St<-c(13,9,52,23,100,6,24,48,36,17,81,75,56,92,102,2,41)
#lag_h<-c(25.2,0,11.6,25.5,0,20.9,7.4,34.9,0,26.3,28.4,0,11.2,12.3,0,20.4,7.4)
#mumax<-c(0.1,0.107,0.089,0.125,0.141,0.098,0.086,0.081,0.114,0.079,0.078,0.085,0.122,0.133,0.058,0.094,0.075)
#Nmax<-c(9.07,9.39,8.38,8.08,8.04,7.81,8.32,8.51,9.04,9.08,9.20,8.57,8.24,8.89,7.82,7.35,8.17)
#GModel<-c("G","G","G","G","G","G","G","B","G","G","G","G","B", "G","G","G","B")
#Frequencies and adjusted frequencies based on the 17 strains to randomize
#freq<-c(8.93,8.93,6.97,4.36,3.05,1.31,1.09,0.22,1.31,1.53,0.65,0.87,1.31,0.22,0.22,2.18,2.18)
#freq<-freq/sum(freq)
#SpeciesDF<-data.frame(Species_St,lag_h,mumax,Nmax, GModel)
SpeciesDF<-read_csv("SpeciesData.csv")
Prevs<-c(8.93,0.65,1.53,0.87,8.93,0.22,1.31,1.31,0.22,0.22,2.18,2.18)
Prevs<-Prevs/sum(Prevs)
SpeciesDF$Prev<-Prevs
SpeciesDF<-SpeciesDF %>%
rename(Species_St = ST)
#Assigning Milk DF
Milkdf$Species<-sample(SpeciesDF$Species_St,size = length(Milkdf$Species), prob = SpeciesDF$Prev, replace = T)
Milkdf$SpoilageCon<-rtruncnorm(n = length(Milkdf$SpoilageCon),b = 3, mean =0.3817872, sd=1.108859)
#hist(rtruncnorm(1000, b = 3, mean =0.3817872, sd=1.108859))
hist(Milkdf$SpoilageCon)
buchanan_log10N = function(t,lag,mumax,LOG10N0,LOG10Nmax){
ans <- LOG10N0 + (t >= lag) * (t <= (lag + (LOG10Nmax - LOG10N0) *     log(10)/mumax)) * mumax * (t - lag)/log(10) + (t >= lag) * (t > (lag + (LOG10Nmax - LOG10N0) * log(10)/mumax)) * (LOG10Nmax - LOG10N0)
return(ans)
}
gompertz_log10N = function(t,lag,mumax,LOG10N0,LOG10Nmax) {
ans <- LOG10N0 + (LOG10Nmax - LOG10N0) * exp(-exp(mumax * exp(1) *
(lag - t)/((LOG10Nmax - LOG10N0) * log(10)) + 1))
return(ans)
}
baranyi_log10N = function(t,lag,mumax,LOG10N0,LOG10Nmax) {
ans <- LOG10Nmax + log10((-1 + exp(mumax * lag) + exp(mumax * t))/(exp(mumax * t) - 1 + exp(mumax * lag) * 10^(LOG10Nmax -LOG10N0)))
return(ans)
}
Time_Model<-24*14
for(i in 1:nrow(Milkdf)){
In_Lag_Consumed<-Milkdf$LagCon[i]
ST_Iter<-Milkdf$Species[i]
Pop_Max<-look_for_st(ST= ST_Iter,par_of_int = "Nmax")
Old_Lag<-look_for_st(ST= ST_Iter,par_of_int = "lagt")
Oldmumax<-look_for_st(ST= ST_Iter,par_of_int = "mumax")
#GModel_Run<-look_for_st(ST= ST_Iter,par_of_int = "GModel")
#Creating Time Temp Df
GModel_Run<-"Bu"
Temperature_Static<- rlaplace(1,m=4.06,s=2.31)
while (Temperature_Static > 15 | Temperature_Static < -1) {
Temperature_Static<- rlaplace(1,m=4.06,s=2.31)
}
Newlag<-new_lag_time(newTemp =Temperature_Static,oldLag = Old_Lag)
NewMumax<-((new_growth_rate(newTemp = Temperature_Static,oldMu = Oldmumax)))*0.685
if(GModel_Run=="G"){
Pop<-gompertz_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
} else if (GModel_Run =="B"){
Pop<-baranyi_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
}else if (GModel_Run =="Bu"){
Pop<-buchanan_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
}
Milkdf$SpoilageCon[i]<-Pop
}
View(SpeciesDF)
end_time <- Sys.time()
end_time - start_time
hist(Milkdf$SpoilageCon,  ylim=c(0,800), 35)
mean(Milkdf$SpoilageCon)
sum(Milkdf$SpoilageCon>5)
####
#Creating a dataframe where the 17 species have therr relevant parameters
#Creating a dataframe with milk values.
Milkdf<-data.frame("MilkID" = seq(0,10000),"SpoilageCon" =NA, "LagCon" = 0, "Species" = NA)
#Species_St<-c(13,9,52,23,100,6,24,48,36,17,81,75,56,92,102,2,41)
#lag_h<-c(25.2,0,11.6,25.5,0,20.9,7.4,34.9,0,26.3,28.4,0,11.2,12.3,0,20.4,7.4)
#mumax<-c(0.1,0.107,0.089,0.125,0.141,0.098,0.086,0.081,0.114,0.079,0.078,0.085,0.122,0.133,0.058,0.094,0.075)
#Nmax<-c(9.07,9.39,8.38,8.08,8.04,7.81,8.32,8.51,9.04,9.08,9.20,8.57,8.24,8.89,7.82,7.35,8.17)
#GModel<-c("G","G","G","G","G","G","G","B","G","G","G","G","B", "G","G","G","B")
#Frequencies and adjusted frequencies based on the 17 strains to randomize
#freq<-c(8.93,8.93,6.97,4.36,3.05,1.31,1.09,0.22,1.31,1.53,0.65,0.87,1.31,0.22,0.22,2.18,2.18)
#freq<-freq/sum(freq)
#SpeciesDF<-data.frame(Species_St,lag_h,mumax,Nmax, GModel)
SpeciesDF<-read_csv("SpeciesData.csv")
Prevs<-c(8.93,0.65,1.53,0.87,8.93,0.22,1.31,1.31,0.22,0.22,2.18,2.18)
Prevs<-Prevs/sum(Prevs)
SpeciesDF$Prev<-Prevs
SpeciesDF<-SpeciesDF %>%
rename(Species_St = ST)
SpeciesDF$mumax = SpeciesDF$mumax*0.685
#Assigning Milk DF
Milkdf$Species<-sample(SpeciesDF$Species_St,size = length(Milkdf$Species), prob = SpeciesDF$Prev, replace = T)
Milkdf$SpoilageCon<-rtruncnorm(n = length(Milkdf$SpoilageCon),b = 3, mean =0.3817872, sd=1.108859)
#hist(rtruncnorm(1000, b = 3, mean =0.3817872, sd=1.108859))
hist(Milkdf$SpoilageCon)
buchanan_log10N = function(t,lag,mumax,LOG10N0,LOG10Nmax){
ans <- LOG10N0 + (t >= lag) * (t <= (lag + (LOG10Nmax - LOG10N0) *     log(10)/mumax)) * mumax * (t - lag)/log(10) + (t >= lag) * (t > (lag + (LOG10Nmax - LOG10N0) * log(10)/mumax)) * (LOG10Nmax - LOG10N0)
return(ans)
}
gompertz_log10N = function(t,lag,mumax,LOG10N0,LOG10Nmax) {
ans <- LOG10N0 + (LOG10Nmax - LOG10N0) * exp(-exp(mumax * exp(1) *
(lag - t)/((LOG10Nmax - LOG10N0) * log(10)) + 1))
return(ans)
}
baranyi_log10N = function(t,lag,mumax,LOG10N0,LOG10Nmax) {
ans <- LOG10Nmax + log10((-1 + exp(mumax * lag) + exp(mumax * t))/(exp(mumax * t) - 1 + exp(mumax * lag) * 10^(LOG10Nmax -LOG10N0)))
return(ans)
}
Time_Model<-24*14
for(i in 1:nrow(Milkdf)){
In_Lag_Consumed<-Milkdf$LagCon[i]
ST_Iter<-Milkdf$Species[i]
Pop_Max<-look_for_st(ST= ST_Iter,par_of_int = "Nmax")
Old_Lag<-look_for_st(ST= ST_Iter,par_of_int = "lagt")
Oldmumax<-look_for_st(ST= ST_Iter,par_of_int = "mumax")
#GModel_Run<-look_for_st(ST= ST_Iter,par_of_int = "GModel")
#Creating Time Temp Df
GModel_Run<-"Bu"
Temperature_Static<- rlaplace(1,m=4.06,s=2.31)
while (Temperature_Static > 15 | Temperature_Static < -1) {
Temperature_Static<- rlaplace(1,m=4.06,s=2.31)
}
Newlag<-new_lag_time(newTemp =Temperature_Static,oldLag = Old_Lag)
NewMumax<-((new_growth_rate(newTemp = Temperature_Static,oldMu = Oldmumax)))
if(GModel_Run=="G"){
Pop<-gompertz_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
} else if (GModel_Run =="B"){
Pop<-baranyi_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
}else if (GModel_Run =="Bu"){
Pop<-buchanan_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
}
Milkdf$SpoilageCon[i]<-Pop
}
end_time <- Sys.time()
end_time - start_time
hist(Milkdf$SpoilageCon,  ylim=c(0,800), 35)
mean(Milkdf$SpoilageCon)
sum(Milkdf$SpoilageCon>5)
####
hist(Milkdf$SpoilageCon,  ylim=c(0,1100), 35)
hist(Milkdf$SpoilageCon,  ylim=c(0,1200), 35)
hist(Milkdf$SpoilageCon,  ylim=c(0,1300), 35)
hist(Milkdf$SpoilageCon,  ylim=c(0,1500), 35)
hist(Milkdf$SpoilageCon,  ylim=c(0,2000), 35)
hist(Milkdf$SpoilageCon, 35)
hist(Milkdf$SpoilageCon, 40)
hist(Milkdf$SpoilageCon, 37)
hist(Milkdf$SpoilageCon, 30)
View(Milkdf)
n_sim = 10000
n_halfgal = 10000
temps <- vector()
temps <- rlaplace(n=(n_sim*n_halfgal),m=4.06,s=2.31) # will be using temps vector later
temps <- rep(NA, n_sim*n_halfgal)
for (i in 1:(n_sim*n_halfgal)){
number <- rlaplace(1,m=4.06,s=2.31)
while (number > 15 | number < -1) {
number <- rlaplace(1,m=4.06,s=2.31)
}
temps[i] <- number
}
n_sim = 100
n_halfgal = 100
temps <- rep(NA, n_sim*n_halfgal)
for (i in 1:(n_sim*n_halfgal)){
number <- rlaplace(1,m=4.06,s=2.31)
while (number > 15 | number < -1) {
number <- rlaplace(1,m=4.06,s=2.31)
}
temps[i] <- number
}
logMPN_mean <- c(0.3817872) #day initial
logMPN_sd <- c(1.108859) #day initial
logMPN_samp = rtruncnorm(n_sim, b=3, mean=logMPN_mean, sd=logMPN_sd)
#logMPN_samp = rnorm(n_sim, logMPN_mean, logMPN_sd)
MPN_samp = 10^logMPN_samp
MPN_samp_halfgal = MPN_samp * 1900 #MPN per half gallon (1892.71 mL in half gallon)
### iii. Sample distributions
MPN_init<-vector()
allele <- vector()
for (i in 1:n_sim){
MPN_init_samp <-rep(rpois(n_halfgal, MPN_samp_halfgal[i]), times = n_day)
MPN_init<-c(MPN_init, MPN_init_samp)
allele_samp <- rep(sample(freq_vec, n_halfgal, replace = T), times = n_day)
allele <- c(allele, allele_samp)
}
### iii. Sample distributions
n_day = 10
MPN_init<-vector()
allele <- vector()
for (i in 1:n_sim){
MPN_init_samp <-rep(rpois(n_halfgal, MPN_samp_halfgal[i]), times = n_day)
MPN_init<-c(MPN_init, MPN_init_samp)
allele_samp <- rep(sample(freq_vec, n_halfgal, replace = T), times = n_day)
allele <- c(allele, allele_samp)
}
MPN_init_samp <-rep(rpois(n_halfgal, MPN_samp_halfgal[i]), times = n_day)
buchanan_log10N = function(t,lag,mumax,LOG10N0,LOG10Nmax){
ans <- LOG10N0 + (t >= lag) * (t <= (lag + (LOG10Nmax - LOG10N0) *     log(10)/mumax)) * mumax * (t - lag)/log(10) + (t >= lag) * (t > (lag + (LOG10Nmax - LOG10N0) * log(10)/mumax)) * (LOG10Nmax - LOG10N0)
return(ans)
}
gompertz_log10N = function(t,lag,mumax,LOG10N0,LOG10Nmax) {
ans <- LOG10N0 + (LOG10Nmax - LOG10N0) * exp(-exp(mumax * exp(1) *
(lag - t)/((LOG10Nmax - LOG10N0) * log(10)) + 1))
return(ans)
}
baranyi_log10N = function(t,lag,mumax,LOG10N0,LOG10Nmax) {
ans <- LOG10Nmax + log10((-1 + exp(mumax * lag) + exp(mumax * t))/(exp(mumax * t) - 1 + exp(mumax * lag) * 10^(LOG10Nmax -LOG10N0)))
return(ans)
}
Time_Model<-24*14
for(i in 1:nrow(Milkdf)){
In_Lag_Consumed<-Milkdf$LagCon[i]
ST_Iter<-Milkdf$Species[i]
Pop_Max<-look_for_st(ST= ST_Iter,par_of_int = "Nmax")
Old_Lag<-look_for_st(ST= ST_Iter,par_of_int = "lagt")
Oldmumax<-look_for_st(ST= ST_Iter,par_of_int = "mumax")
#GModel_Run<-look_for_st(ST= ST_Iter,par_of_int = "GModel")
#Creating Time Temp Df
GModel_Run<-"Bu"
Temperature_Static<- rlaplace(1,m=4.06,s=2.31)
while (Temperature_Static > 15 | Temperature_Static < -1) {
Temperature_Static<- rlaplace(1,m=4.06,s=2.31)
}
Newlag<-new_lag_time(newTemp =Temperature_Static,oldLag = Old_Lag)
NewMumax<-((new_growth_rate(newTemp = Temperature_Static,oldMu = Oldmumax)))
if(GModel_Run=="G"){
Pop<-gompertz_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
} else if (GModel_Run =="B"){
Pop<-baranyi_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
}else if (GModel_Run =="Bu"){
Pop<-buchanan_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
}
Milkdf$SpoilageCon[i]<-Pop
}
end_time <- Sys.time()
end_time - start_time
hist(Milkdf$SpoilageCon, 30)
mean(Milkdf$SpoilageCon)
sum(Milkdf$SpoilageCon>5)
####
read_csv(https://raw.githubusercontent.com/FSL-MQIP/MC-2020/main/Sam_FFAR_PPCmodel/Base%20Model/Frequency_ALLISOLATES_021120.csv)
read_csv("https://raw.githubusercontent.com/FSL-MQIP/MC-2020/main/Sam_FFAR_PPCmodel/Base%20Model/Frequency_ALLISOLATES_021120.csv")
fre_data<-read_csv("https://raw.githubusercontent.com/FSL-MQIP/MC-2020/main/Sam_FFAR_PPCmodel/Base%20Model/Frequency_ALLISOLATES_021120.csv")
fre_data %>%
group_by(X16S_ST) %>%
summarise(freq= n/row_number())
fre_data %>%
group_by(X16S_ST) %>%
summarise(freq= n/row_number())
fre_data %>%
group_by(X16S_ST) %>%
count()
fre_data %>%
group_by(X16S_ST) %>%
count() %>%
summarise(freq= n/row_number())
fre_data %>%
group_by(X16S_ST) %>%
count()
freqdf<-fre_data %>%
group_by(X16S_ST) %>%
count() %>%
summarise(freq= n/row_number())
View(freqdf)
freqdf$freq2 = freqdf$freq/458
hist(Milkdf$SpoilageCon, 35)
hist(Milkdf$SpoilageCon, 40)
View(freqdf)
hist(Milkdf$SpoilageCon, 40, ylim = 800)
hist(Milkdf$SpoilageCon, 20)
hist(Milkdf$SpoilageCon, 50)
hist(Milkdf$SpoilageCon, 100)
mean(Milkdf$SpoilageCon)
sum(Milkdf$SpoilageCon>5)
sum(Milkdf$SpoilageCon>4.3)
sum(Milkdf$SpoilageCon>5)
sum(Milkdf$SpoilageCon>4.3)
buchanan_log10N = function(t,lag,mumax,LOG10N0,LOG10Nmax){
ans <- LOG10N0 + (t >= lag) * (t <= (lag + (LOG10Nmax - LOG10N0) *     log(10)/mumax)) * mumax * (t - lag)/log(10) + (t >= lag) * (t > (lag + (LOG10Nmax - LOG10N0) * log(10)/mumax)) * (LOG10Nmax - LOG10N0)
return(ans)
}
gompertz_log10N = function(t,lag,mumax,LOG10N0,LOG10Nmax) {
ans <- LOG10N0 + (LOG10Nmax - LOG10N0) * exp(-exp(mumax * exp(1) *
(lag - t)/((LOG10Nmax - LOG10N0) * log(10)) + 1))
return(ans)
}
baranyi_log10N = function(t,lag,mumax,LOG10N0,LOG10Nmax) {
ans <- LOG10Nmax + log10((-1 + exp(mumax * lag) + exp(mumax * t))/(exp(mumax * t) - 1 + exp(mumax * lag) * 10^(LOG10Nmax -LOG10N0)))
return(ans)
}
Time_Model<-24*10
for(i in 1:nrow(Milkdf)){
In_Lag_Consumed<-Milkdf$LagCon[i]
ST_Iter<-Milkdf$Species[i]
Pop_Max<-look_for_st(ST= ST_Iter,par_of_int = "Nmax")
Old_Lag<-look_for_st(ST= ST_Iter,par_of_int = "lagt")
Oldmumax<-look_for_st(ST= ST_Iter,par_of_int = "mumax")
#GModel_Run<-look_for_st(ST= ST_Iter,par_of_int = "GModel")
#Creating Time Temp Df
GModel_Run<-"Bu"
Temperature_Static<- rlaplace(1,m=4.06,s=2.31)
while (Temperature_Static > 15 | Temperature_Static < -1) {
Temperature_Static<- rlaplace(1,m=4.06,s=2.31)
}
Newlag<-new_lag_time(newTemp =Temperature_Static,oldLag = Old_Lag)
NewMumax<-((new_growth_rate(newTemp = Temperature_Static,oldMu = Oldmumax)))
if(GModel_Run=="G"){
Pop<-gompertz_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
} else if (GModel_Run =="B"){
Pop<-baranyi_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
}else if (GModel_Run =="Bu"){
Pop<-buchanan_log10N(t=Time_Model,lag = Newlag,mumax = NewMumax,LOG10N0 =Milkdf$SpoilageCon[i], LOG10Nmax = Pop_Max )
}
Milkdf$SpoilageCon[i]<-Pop
}
end_time <- Sys.time()
end_time - start_time
hist(Milkdf$SpoilageCon, 100)
mean(Milkdf$SpoilageCon)
sum(Milkdf$SpoilageCon>4.3)
####
#Standard Inputs
rho <-1.033 #kg/L
C <- 4.2 #kj/KgC
V <- 0.236 #L
A <- 0.004275 #m2
#Negative Slopes
Neg_Slope_RTB<-(-0.0124)
get_h<-function(Neg_slope, rho = 1.033, C = 4.2 , V = 0.236, A = 0.004275){
neg_h =  ((Neg_slope*rho*C*V)/A)
return(- neg_h)
}
#Getting the Hs
h_RTB = get_h(Neg_slope = Neg_Slope_RTB)
get_temp<-function(h, To, Tinf, time,  A =0.004275,rho =1.033, C= 4.2, V = 0.236 ){
#Time in minutes
#Tinf = External Temp
#To = Initial temperature of the milk
# h = convection trans coeff for that codition
return (exp(-(h*A/rho*C*V)*(time))*(To-Tinf)+Tinf)
}
get_temp(h = h_RTB, To = 1.55, Tinf =  20, time = 5)
#Constant outside temperature
predict_temp<-function(Initial_Temp, Room_temp, Total_min, h_condition){
#Returns a vector of tempepratures
Total_Time_min = Total_min
Temp_Initial = Initial_Temp
T_inf = Room_temp
Temp_V<-c()
for (i in 1:Total_Time_min){
if (i == 1){
New_Temp = Temp_Initial
}else if (i == 2){
New_Temp = get_temp(h = h_condition, To = Temp_Initial, Tinf =  T_inf, time = 1)
}else{
New_Temp = get_temp(h = h_condition, To = New_Temp, Tinf =  T_inf, time = 1)
}
Temp_V<-c(Temp_V, New_Temp)
}
return (Temp_V)
}
predict_temp(Initial_Temp = 4.5,Room_temp = 22, Total_min = 42, h_condition = h_RTB)
predict_temp(Initial_Temp = 8,Room_temp = 23, Total_min = 120, h_condition = h_RTB)
predict_temp(Initial_Temp = 8,Room_temp = 23, Total_min = 120, h_condition = h_RTB)
get_temp(h = h_RTB, To = 1.55, Tinf =  20, time = 5)
get_temp(h = h_RTB, To = 8, Tinf =  23, time = 2)
get_temp(h = h_RTB, To = 8, Tinf =  23, time = 120)
