theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Tray with Ice Packs - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")
ggsave("Pedicted Time and Temp Profiles/PredictedTIP.png", height = 3, width = 8, dpi = 300)
#Worst case scenario 124, 1314.125 min Tray with ice packs - 21 hr 55 min Refrigerated Overnight"
Time_Temp_Df_TIP<-Create_Temperature_Profile_days(First_Cond = "Tray With Ice Packs",
Second_Cond = "Refrigeration",
First_Cond_Total_Time = 124,
Second_Cond_Total_Time = 1314,
First_Cond_Mean_Temperature = 22.1,
First_Cond_SD_Temperature = 0,#0.77,
Second_Cond_Mean_Temperature= 3.71,
Second_Cond_SD_Temperature = 0,#1.04,
Interval  =1,
Cycles = 5)
Temp_Milk_TIP<-predict_full_milk_temp(Time_Temp_Df_TIP, Temp_Initial = 4.2)
Df_RT_MT_TIP<-data.frame("RoomTemp" = Time_Temp_Df$Rtemp,
"MilkTemp" = Temp_Milk_TIP,
"Time" = 1:length(Temp_Milk_Vectors))
Df_RT_MT_TIP<-melt(Df_RT_MT_TIP, id.vars = "Time")
ggplot(data = Df_RT_MT_TIP, aes(x = Time, y = value, color = variable))+
geom_line(size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Tray with Ice Packs - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")
ggsave("Pedicted Time and Temp Profiles/PredictedTIP.png", height = 3, width = 8, dpi = 300)
#Worst case scenario 124, 1314.125 min Ref Tray - 21 hr 55 min Refrigerated Overnight"
Time_Temp_Df_RT<-Create_Temperature_Profile_days(First_Cond = "Refrigerated Tray",
Second_Cond = "Refrigeration",
First_Cond_Total_Time = 124,
Second_Cond_Total_Time = 1314,
First_Cond_Mean_Temperature = 22.1,
First_Cond_SD_Temperature = 0,#0.77,
Second_Cond_Mean_Temperature= 3.71,
Second_Cond_SD_Temperature = 0,#1.04,
Interval  =1,
Cycles = 5)
Temp_Milk_RT<-predict_full_milk_temp(Time_Temp_Df_RT, Temp_Initial = 4)
Df_RT_MT_RT<-data.frame("RoomTemp" = Time_Temp_Df$Rtemp,
"MilkTemp" = Temp_Milk_RT,
"Time" = 1:length(Temp_Milk_Vectors))
Df_RT_MT_RT<-melt(Df_RT_MT_RT, id.vars = "Time")
ggplot(data = Df_RT_MT_RT, aes(x = Time, y = value, color = variable))+
geom_line(size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Refrigerated Tray - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")
ggsave("Pedicted Time and Temp Profiles/PredictedRefTray.png", height = 3, width = 8, dpi = 300)
predict_full_milk_temp<-function(df, Temp_Initial){
Temp_Milk_Vectors<-c()
Temp_Milk_Vectors<-c(Temp_Initial)
T_inf = df$Rtemp[1]
New_Temp = Temp_Initial
for (i in 2:length(df$Rtemp)){
#Selecting the condition that applies
if (df$Condition[i] == "Room Temp"){
h_condition = h_RTB
} else if (df$Condition[i] == "Refrigeration"){
h_condition = h_ref
} else if (df$Condition[i] == "Refrigerated Tray"){
h_condition = h_RT
} else if (df$Condition[i] == "Tray With Ice Packs"){
h_condition = h_TIP
} else if (df$Condition[i] == "Tray With Ice"){
h_condition = h_TIC
} else if (df$Condition[i] == "Cooler with Ice"){
h_condition = h_CI
}
#Checking if condition changed
if(df$Condition[i] != df$Condition[i-1]){
Condition_Change = 1
T_inf = df$Rtemp[i]
} else {
Condition_Change = 0
}
#Predicting the new temperature
New_Temp = get_temp(h = h_condition, To = New_Temp, Tinf =  T_inf, time = 1)
Temp_Milk_Vectors<-c(Temp_Milk_Vectors,New_Temp)
}
return(Temp_Milk_Vectors)
}
#Worst case scenario 124, 1314.125 min Tray with ice - 21 hr 55 min Refrigerated Overnight"
Time_Temp_Df_TIP<-Create_Temperature_Profile_days(First_Cond = "Tray With Ice",
Second_Cond = "Refrigeration",
First_Cond_Total_Time = 124,
Second_Cond_Total_Time = 1314,
First_Cond_Mean_Temperature = 22.1,
First_Cond_SD_Temperature = 0,#0.77,
Second_Cond_Mean_Temperature= 3.71,
Second_Cond_SD_Temperature = 0,#1.04,
Interval  =1,
Cycles = 5)
Temp_Milk_TIC<-predict_full_milk_temp(Time_Temp_Df_TIC, Temp_Initial = 4.2)
#Worst case scenario 124, 1314.125 min Tray with ice - 21 hr 55 min Refrigerated Overnight"
Time_Temp_Df_TIC<-Create_Temperature_Profile_days(First_Cond = "Tray With Ice",
Second_Cond = "Refrigeration",
First_Cond_Total_Time = 124,
Second_Cond_Total_Time = 1314,
First_Cond_Mean_Temperature = 22.1,
First_Cond_SD_Temperature = 0,#0.77,
Second_Cond_Mean_Temperature= 3.71,
Second_Cond_SD_Temperature = 0,#1.04,
Interval  =1,
Cycles = 5)
Temp_Milk_TIC<-predict_full_milk_temp(Time_Temp_Df_TIC, Temp_Initial = 4.2)
Df_RT_MT_TIC<-data.frame("RoomTemp" = Time_Temp_Df$Rtemp,
"MilkTemp" = Temp_Milk_TIC,
"Time" = 1:length(Temp_Milk_TIC))
Df_RT_MT_TIC<-melt(Df_RT_MT_TIC, id.vars = "Time")
ggplot(data = Df_RT_MT_TIC, aes(x = Time, y = value, color = variable))+
geom_line(size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Tray with Ice - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")
ggsave("Pedicted Time and Temp Profiles/PredictedTIC.png", height = 3, width = 8, dpi = 300)
#Worst case scenario 124, 1314.125 min Cooler with Ice - 21 hr 55 min Refrigerated Overnight"
Time_Temp_Df_TIC<-Create_Temperature_Profile_days(First_Cond = "Cooler with Ice",
Second_Cond = "Refrigeration",
First_Cond_Total_Time = 124,
Second_Cond_Total_Time = 1314,
First_Cond_Mean_Temperature = 22.1,
First_Cond_SD_Temperature = 0,#0.77,
Second_Cond_Mean_Temperature= 3.71,
Second_Cond_SD_Temperature = 0,#1.04,
Interval  =1,
Cycles = 5)
Temp_Milk_CI<-predict_full_milk_temp(Time_Temp_Df_CI, Temp_Initial = 4.2)
#Worst case scenario 124, 1314.125 min Cooler with Ice - 21 hr 55 min Refrigerated Overnight"
Time_Temp_Df_CI<-Create_Temperature_Profile_days(First_Cond = "Cooler with Ice",
Second_Cond = "Refrigeration",
First_Cond_Total_Time = 124,
Second_Cond_Total_Time = 1314,
First_Cond_Mean_Temperature = 22.1,
First_Cond_SD_Temperature = 0,#0.77,
Second_Cond_Mean_Temperature= 3.71,
Second_Cond_SD_Temperature = 0,#1.04,
Interval  =1,
Cycles = 5)
Temp_Milk_CI<-predict_full_milk_temp(Time_Temp_Df_CI, Temp_Initial = 4.2)
Df_RT_MT_CI<-data.frame("RoomTemp" = Time_Temp_Df$Rtemp,
"MilkTemp" = Temp_Milk_CI,
"Time" = 1:length(Temp_Milk_CI))
Df_RT_MT_CI<-melt(Df_RT_MT_CI, id.vars = "Time")
ggplot(data = Df_RT_MT_CI, aes(x = Time, y = value, color = variable))+
geom_line(size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Cooler with Ice - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")
ggsave("Pedicted Time and Temp Profiles/PredictedCI.png", height = 3, width = 8, dpi = 300)
#Function for growth and lag phase
new_growth_rate<-function(newTemp, oldMu,oldTemp = 6, T0 = -4.15){
newMu<-((newTemp-T0)/(oldTemp-T0))* oldMu
return (newMu)
}
#Calculation of the new lag time.
new_lag_time <- function (newTemp, oldLag, oldTemp = 6, T0 = -4.15) {
numerator <- oldTemp -T0
denom <- newTemp - T0
newLag <- ( (numerator / denom)^2) * oldLag
return(newLag)
}
#This function calculates thee growth based on a time and temperature profile for 1 specific milk with R100084 P Paoae
Func_Growth_LagCon<-function(In_Lag_Consumed, Time_Temp_df,Interval, AF){
#In_Lag_Consumed= Total lag time consumed
#Time_Temp_df = dataframe with time and temperature conditions
#Interval = time interval in the time_temp_df in hrs.
Total_Lag_Consumed = In_Lag_Consumed
Total_Growth = 0
old_lag = 0
NMax = 8.14
old_mumax = 0.083508
Growth_V = c()
for (i in 1:nrow(Time_Temp_df)){
if (Total_Lag_Consumed <1 && old_lag!=0){
Lag_t_interval<-new_lag_time(newTemp = Time_Temp_df$MilkTemp[i], oldLag = old_lag)
Lag_Consumed<-Interval/Lag_t_interval
Total_Lag_Consumed<-Total_Lag_Consumed+Lag_Consumed
Growth = 0
} else if (Total_Lag_Consumed>=1 | old_lag == 0){
Growth = ((new_growth_rate(newTemp = Time_Temp_df$TempMilk[i], oldMu = old_mumax))/2.303)* AF#0.684 #Converted log10 from log ln
Total_Growth = Total_Growth + (Growth*Interval)
}
Growth_V = c(Growth_V,Total_Growth)
#print(length(Growth_V))
}
return(list(Total_Growth,Total_Lag_Consumed,Growth_V))
}
#Buchanan spoilage function
Spoilage_Function_Single_Milk<-function(Cont, Pop_Max, Time_Temp_df, Interval =1/60, AF){
Lag_Consumed = 0
#this function provides two outputs, the total growth, and the new updated lag phase consumed.
Output_Milk<-Func_Growth_LagCon(In_Lag_Consumed = Lag_Consumed ,Time_Temp_df = Time_Temp_df,Interval = Interval, AF=AF)
Lag_Consumed = Output_Milk[[2]]
Cont<-Output_Milk[[1]]+Cont
if( Cont>Pop_Max){
Cont = Pop_Max
}
return (list(Cont,Output_Milk[[3]]))
}
Output_Milk<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_RT_MT, Interval =1/60,AF = 1.32)
Output_Milk<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_RT_MT, Interval =1/60,AF = 1.32)
#This function calculates thee growth based on a time and temperature profile for 1 specific milk with R100084 P Paoae
Func_Growth_LagCon<-function(In_Lag_Consumed, Time_Temp_df,Interval, AF){
#In_Lag_Consumed= Total lag time consumed
#Time_Temp_df = dataframe with time and temperature conditions
#Interval = time interval in the time_temp_df in hrs.
Total_Lag_Consumed = In_Lag_Consumed
Total_Growth = 0
old_lag = 0
NMax = 8.14
old_mumax = 0.083508
Growth_V = c()
for (i in 1:nrow(Time_Temp_df)){
if (Total_Lag_Consumed <1 && old_lag!=0){
Lag_t_interval<-new_lag_time(newTemp = Time_Temp_df$MilkTemp[i], oldLag = old_lag)
Lag_Consumed<-Interval/Lag_t_interval
Total_Lag_Consumed<-Total_Lag_Consumed+Lag_Consumed
Growth = 0
} else if (Total_Lag_Consumed>=1 | old_lag == 0){
Growth = ((new_growth_rate(newTemp = Time_Temp_df$MilkTemp[i], oldMu = old_mumax))/2.303)* AF#0.684 #Converted log10 from log ln
Total_Growth = Total_Growth + (Growth*Interval)
}
Growth_V = c(Growth_V,Total_Growth)
#print(length(Growth_V))
}
return(list(Total_Growth,Total_Lag_Consumed,Growth_V))
}
#Buchanan spoilage function
Spoilage_Function_Single_Milk<-function(Cont, Pop_Max, Time_Temp_df, Interval =1/60, AF){
Lag_Consumed = 0
#this function provides two outputs, the total growth, and the new updated lag phase consumed.
Output_Milk<-Func_Growth_LagCon(In_Lag_Consumed = Lag_Consumed ,Time_Temp_df = Time_Temp_df,Interval = Interval, AF=AF)
Lag_Consumed = Output_Milk[[2]]
Cont<-Output_Milk[[1]]+Cont
if( Cont>Pop_Max){
Cont = Pop_Max
}
return (list(Cont,Output_Milk[[3]]))
}
Output_Milk<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_RT_MT, Interval =1/60,AF = 1.32)
Df_RT_MT
#Worst case scenario 124, 1314.125 min Room Temp - 21 hr 55 min Refrigerated Overnight"
Time_Temp_Df<-Create_Temperature_Profile_days(First_Cond = "Room Temp",
Second_Cond = "Refrigeration",
First_Cond_Total_Time = 124,
Second_Cond_Total_Time = 1314,
First_Cond_Mean_Temperature = 22.1,
First_Cond_SD_Temperature = 0,#0.77,
Second_Cond_Mean_Temperature= 3.71,
Second_Cond_SD_Temperature = 0,#1.04,
Interval  =1,
Cycles = 5)
Temp_Milk_Vectors<-predict_full_milk_temp(df = Time_Temp_Df, Temp_Initial = 4.2)
Df_RT_MT<-data.frame("RoomTemp" = Time_Temp_Df$Rtemp,
"MilkTemp" = Temp_Milk_Vectors,
"Time" = 1:length(Temp_Milk_Vectors))
Df_RT_MT_melted<-melt(Df_RT_MT, id.vars = "Time")
Output_Milk<-Spoilage_Function_Single_Milk(Cont = 2.44, Pop_Max =8.14, Time_Temp_df = Df_RT_MT, Interval =1/60,AF = 1.32)
Changes_Over_Time<-2.44+Output_Milk[[2]]
plot(Changes_Over_Time)
Df_RT_MT_melted$cont<-Changes_Over_Time
ggplot(data = Df_RT_MT_melted, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
geom_line(aes(y = cont))
ggplot(data = Df_RT_MT_melted, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
geom_line(aes(y = cont))+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")
ggplot(data = Df_RT_MT_melted, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
geom_line(aes(y = cont))+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
scale_y_continuous(
# Features of the first axis
name = "Temperature (Celsius °)",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*cont, name="Price ($)")
)
ggplot(data = Df_RT_MT_melted, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
geom_line(aes(y = cont))+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
scale_y_continuous(
# Features of the first axis
name = "Temperature (Celsius °)",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*0.5, name="Price ($)")
)
ggplot(data = Df_RT_MT_melted, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
geom_line(aes(y = cont))+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
scale_y_continuous(
# Features of the first axis
name = "Temperature (Celsius °)",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*0.2, name="Price ($)")
)
ggplot(data = Df_RT_MT_melted, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
geom_line(aes(y = cont))+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
scale_y_continuous(
# Features of the first axis
name = "Temperature (Celsius °)",
# Add a second axis and specify its features
sec.axis = sec_axis(cont, name="Price ($)")
)
ggplot(data = Df_RT_MT_melted, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
geom_line(aes(y = cont))+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
scale_y_continuous(
# Features of the first axis
name = "Temperature (Celsius °)",
# Add a second axis and specify its features
sec.axis = sec_axis(~cont, name="Price ($)")
)
5
ggplot(data = Df_RT_MT_melted, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
geom_line(aes(y = cont))+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
scale_y_continuous(
# Features of the first axis
name = "Temperature (Celsius °)",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*0.5, name="Price ($)")
)
ggplot(data = Df_RT_MT_melted, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
geom_line(aes(y = cont, color = "red"))+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
scale_y_continuous(
# Features of the first axis
name = "Temperature (Celsius °)",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*0.5, name="Price ($)")
)
ggplot(data = Df_RT_MT_melted, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
geom_line(aes(y = cont, color = "Population Change"))+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
scale_y_continuous(
# Features of the first axis
name = "Temperature (Celsius °)",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*0.5, name="Price ($)")
)
ggplot(data = Df_RT_MT_melted, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
geom_line(aes(y = cont, color = "Population Change"))+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
scale_y_continuous(
# Features of the first axis
name = "Temperature (Celsius °)",
# Add a second axis and specify its features
sec.axis = sec_axis(~.*0.5, name=expression("Pseudomonas poae population (log"[10]~"CFU/ml)"))
)
ggplot(data = Df_RT_MT_melted, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
geom_line(aes(y = cont, color = "Population Change"))+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
scale_y_continuous(
# Add a second axis and specify its features
sec.axis = sec_axis(~.*0.5, name=expression("Pseudomonas poae population (log"[10]~"CFU/ml)"))
)
library(cowplot)
ggplot(data = Df_RT_MT_melted, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")
Df_RT_MT$cont<-Changes_Over_Time
Df_RT_MT
Df_RT_MT_melted$cont<-Changes_Over_Time
ggplot(data = Df_RT_MT_melted, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")
Df_RT_MT_melted
#Worst case scenario 124, 1314.125 min Room Temp - 21 hr 55 min Refrigerated Overnight"
Time_Temp_Df<-Create_Temperature_Profile_days(First_Cond = "Room Temp",
Second_Cond = "Refrigeration",
First_Cond_Total_Time = 124,
Second_Cond_Total_Time = 1314,
First_Cond_Mean_Temperature = 22.1,
First_Cond_SD_Temperature = 0,#0.77,
Second_Cond_Mean_Temperature= 3.71,
Second_Cond_SD_Temperature = 0,#1.04,
Interval  =1,
Cycles = 5)
Temp_Milk_Vectors<-predict_full_milk_temp(df = Time_Temp_Df, Temp_Initial = 4.2)
Df_RT_MT<-data.frame("RoomTemp" = Time_Temp_Df$Rtemp,
"MilkTemp" = Temp_Milk_Vectors,
"Time" = 1:length(Temp_Milk_Vectors))
Df_RT_MT_melted<-melt(Df_RT_MT, id.vars = "Time")
Df_RT_MT_melted_1$Type<-"Temperature Profiles"
Df_RT_MT_melted$Type<-"Temperature Profiles"
data_Milk_G_RTB<-data.frame("Time" = 1:length(Changes_Over_Time),
"variable" = "Population Change",
"value" = Changes_Over_Time,
"Type" = "Population Changes")
new_dat = rbind(Df_RT_MT_melted,data_Milk_G_RTB)
ggplot(data = new_dat, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_wrap(~Type)
ggplot(data = new_dat, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_wrap(~Type, scales = "free_y")
ggplot(data = new_dat, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_col(~Type, scales = "free_y")
ggplot(data = new_dat, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_grid(~Type, scales = "free_y")
ggplot(data = new_dat, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_wrap(~Type, scales = "free_y")
ggplot(data = new_dat, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_wrap(~Type, scales = "free_y", ncol= 1)
ggsave("Pedicted Time and Temp Profiles/TempanChange_RTB.png", height = 3, width = 8, dpi = 300)
ggsave("Pedicted Time and Temp Profiles/TempanChange_RTB.png", height = 6, width = 8, dpi = 300)
ggplot(data = new_dat, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_wrap(~Type, scales = "free_y", ncol= 1,labeller = as_labeller(c(`Population Changes` = "Currents (A)", `Temperature Profiles` = "Voltage (V)") ))
ggplot(data = new_dat, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "Temperature (°C)", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_wrap(~Type, scales = "free_y", ncol= 1,labeller = as_labeller(c(`Population Changes` = "Currents (A)", `Temperature Profiles` = "Voltage (V)") ),strip.position = "left", )
ggplot(data = new_dat, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_wrap(~Type, scales = "free_y", ncol= 1,labeller = as_labeller(c(`Population Changes` = "Currents (A)", `Temperature Profiles` = "Voltage (V)") ),strip.position = "left", )
ggplot(data = new_dat, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_wrap(~Type, scales = "free_y", ncol= 1,labeller = as_labeller(c(`Population Changes` = "Population log CFU/g", `Temperature Profiles` = "Temperature (°C)") ),strip.position = "left", )
ggplot(data = new_dat, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Temperature Profile")+
facet_wrap(~Type, scales = "free_y", ncol= 1,labeller = as_labeller(c(`Population Changes` = "Population (log CFU/g)", `Temperature Profiles` = "Temperature (°C)") ),strip.position = "left", )
ggsave("Pedicted Time and Temp Profiles/TempanChange_RTB.png", height = 5, width = 8, dpi = 300)
ggplot(data = new_dat, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Description")+
facet_wrap(~Type, scales = "free_y", ncol= 1,labeller = as_labeller(c(`Population Changes` = "Population (log CFU/g)", `Temperature Profiles` = "Temperature (°C)") ),strip.position = "left", )
ggsave("Pedicted Time and Temp Profiles/TempanChange_RTB.png", height = 5, width = 8, dpi = 300)
ggplot(data = new_dat, aes(x = Time))+
geom_line(aes(y = value, color = variable),size = 1)+
theme_bw()+
labs(x = "Time (min)", y = "", title= "125 min Room Temp - 21 hr 55 min Refrigerated Overnight")+
scale_color_discrete(name = "Line Description")+
facet_wrap(~Type, scales = "free_y", ncol= 1,labeller = as_labeller(c(`Population Changes` = "Population (log CFU/g)", `Temperature Profiles` = "Temperature (°C)") ),strip.position = "left", )
ggsave("Pedicted Time and Temp Profiles/TempanChange_RTB.png", height = 5, width = 8, dpi = 300)
ggsave("Pedicted Time and Temp Profiles/TempanChange_RTB.png", height = 4, width = 8, dpi = 300)
ggsave("Pedicted Time and Temp Profiles/TempandChange_RTB.png", height = 4, width = 8, dpi = 300)
