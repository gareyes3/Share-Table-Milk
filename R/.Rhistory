install.packages("tidyverse")
library(tidyverse)
library(reshape2)
Original_data<-read_csv(file = "dir_ed_entities.csv")
Modified_Data<-read_csv(file = "Modified_Data_NEW.csv")
setwd("C:/Users/gareyes3/Box/Share Table Project/Milk Spoilage Model Docs/Time Temp Study/Time Data")
library(tidyverse)
library(reshape2)
Original_data<-read_csv(file = "dir_ed_entities.csv")
Modified_Data<-read_csv(file = "Modified_Data_NEW.csv")
Months<-c("Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec")
Replacements<-as.character(seq(1:12))
for (i in 1:nrow(Modified_Data)){
if(!is.na(Modified_Data$GradeServed[i])){
if(sum(str_detect(Modified_Data$GradeServed[i], Months))>0){
strings_dates<-str_split(Modified_Data$GradeServed[i], "-",simplify = T)
Modified_Data$GradeServed[i]<-paste0(strings_dates[2], "-", strings_dates[1])
}
}
}
for (i in 1:length(Months)){
Modified_Data$GradeServed<-str_replace(Modified_Data$GradeServed, Months[i], Replacements[i])
}
Modified_Data$GradeServed<-as.character(Modified_Data$GradeServed)
#write.csv(Modified_Data,file = "Modified_Data.csv")
Modified_Data$Grades<-as.factor(Modified_Data$Grades)
levels(Modified_Data$Grades)
View(Modified_Data)
x_1<-Modified_Data %>%
select(FacilityName, Grades,`LUNCH 1`, `LUNCH 2`, `LUNCH 3`, `LUNCH 4`, `LUNCH 5`, `LUNCH 6`)
RowMeans_v<-Modified_Data %>%
select(`LUNCH 1`, `LUNCH 2`, `LUNCH 3`, `LUNCH 4`, `LUNCH 5`, `LUNCH 6`) %>%
rowMeans(na.rm = T)
x_1$RowMeans<-RowMeans_v
View(x_1)
#ALL
All_L<-x_1 %>%
drop_na(RowMeans) %>%
filter(Grades == "All") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "All")
Combined_Summary<-rbind(HS_L,MS_L,Elem_L, All_L)
#High Schools
HS_L<-x_1 %>%
drop_na(RowMeans) %>%
filter(Grades == "High" | Grades == "Middle, High") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans)) %>%
mutate(Type = "High Schools")
#Middle Schools
MS_L<-x_1 %>%
drop_na(RowMeans) %>%
filter(Grades == "Middle"|Grades == "Elementary, Middle"|Grades == "Middle, High") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "Middle Schools")
#Elem
Elem_L<-x_1 %>%
drop_na(RowMeans) %>%
filter(Grades == "Elementary"|Grades == "Elementary, Middle") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "Elementary Schools")
Combined_Summary<-rbind(HS_L,MS_L,Elem_L, All_L)
Combined_Summary
Combined_Summary<-rbind(Elem_L,MS_L,HS_L,All_L)
Combined_Summary
#Combined
Combined_L<-x_1 %>%
drop_na(RowMeans) %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "Combined")
Combined_Summary<-rbind(Elem_L,MS_L,HS_L,All_L, Combined_All)
#Combined
Combined_L<-x_1 %>%
drop_na(RowMeans) %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "Combined")
Combined_Summary<-rbind(Elem_L,MS_L,HS_L,All_L, Combined_All)
Combined_Summary<-rbind(Elem_L,MS_L,HS_L,All_L, Combined_L)
Combined_Summary
#High Schools
HS_B<-x_2 %>%
drop_na(RowMeans) %>%
filter(Grades == "High" | Grades == "Middle, High") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans)) %>%
mutate(Type = "High Schools")
#Better Summary Breaks
x_2<-Modified_Data %>%
select(FacilityName, Grades,BREAK...24,BREAK...26,BREAK...28,BREAK...30,BREAK...32)
RowMeans_v2<-Modified_Data %>%
select(BREAK...24,BREAK...26,BREAK...28,BREAK...30,BREAK...32) %>%
rowMeans(na.rm = T)
x_2$RowMeans<-RowMeans_v2
#High Schools
HS_B<-x_2 %>%
drop_na(RowMeans) %>%
filter(Grades == "High" | Grades == "Middle, High") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans)) %>%
mutate(Type = "High Schools")
#Middle Schools
MS_B<-x_2 %>%
drop_na(RowMeans) %>%
filter(Grades == "Middle"|Grades == "Elementary, Middle"|Grades == "Middle, High") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "Middle Schools")
#Elem
Elem_B<-x_2 %>%
drop_na(RowMeans) %>%
filter(Grades == "Elementary"|Grades == "Elementary, Middle") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "Elementary Schools")
#ALL
All_B<-x_2 %>%
drop_na(RowMeans) %>%
filter(Grades == "All") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "All")
#Combined
Combined_B<-x_2 %>%
drop_na(RowMeans) %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "Combined")
Combined_Summary<-rbind(Elem_B,MS_B,HS_B,Combined_B)
Combined_Summary
Combined_Summary<-rbind(Elem_B,MS_B,HS_B,All_B,Combined_B)
Combined_Summary
Combined_Summary
x_1<-Modified_Data %>%
select(FacilityName, Grades,`LUNCH 1`, `LUNCH 2`, `LUNCH 3`, `LUNCH 4`, `LUNCH 5`, `LUNCH 6`)
RowMeans_v<-Modified_Data %>%
select(`LUNCH 1`, `LUNCH 2`, `LUNCH 3`, `LUNCH 4`, `LUNCH 5`, `LUNCH 6`) %>%
rowMeans(na.rm = T)
x_1$RowMeans<-RowMeans_v
#High Schools
HS_L<-x_1 %>%
drop_na(RowMeans) %>%
filter(Grades == "High" | Grades == "Middle, High") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans)) %>%
mutate(Type = "High Schools")
#Middle Schools
MS_L<-x_1 %>%
drop_na(RowMeans) %>%
filter(Grades == "Middle"|Grades == "Elementary, Middle"|Grades == "Middle, High") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "Middle Schools")
#Elem
Elem_L<-x_1 %>%
drop_na(RowMeans) %>%
filter(Grades == "Elementary"|Grades == "Elementary, Middle") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "Elementary Schools")
#ALL
All_L<-x_1 %>%
drop_na(RowMeans) %>%
filter(Grades == "All") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "All")
#Combined
Combined_L<-x_1 %>%
drop_na(RowMeans) %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "Combined")
Combined_Summary<-rbind(Elem_L,MS_L,HS_L,All_L, Combined_L)
Combined_Summary
#Combined
x_1 %>%
drop_na(RowMeans) %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))
#Better Summary Breaks
x_2<-Modified_Data %>%
select(FacilityName, Grades,BREAK...24,BREAK...26,BREAK...28,BREAK...30,BREAK...32)
RowMeans_v2<-Modified_Data %>%
select(BREAK...24,BREAK...26,BREAK...28,BREAK...30,BREAK...32) %>%
rowMeans(na.rm = T)
x_2$RowMeans<-RowMeans_v2
#High Schools
HS_B<-x_2 %>%
drop_na(RowMeans) %>%
filter(Grades == "High" | Grades == "Middle, High") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans)) %>%
mutate(Type = "High Schools")
#Middle Schools
MS_B<-x_2 %>%
drop_na(RowMeans) %>%
filter(Grades == "Middle"|Grades == "Elementary, Middle"|Grades == "Middle, High") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "Middle Schools")
#Elem
Elem_B<-x_2 %>%
drop_na(RowMeans) %>%
filter(Grades == "Elementary"|Grades == "Elementary, Middle") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "Elementary Schools")
#ALL
All_B<-x_2 %>%
drop_na(RowMeans) %>%
filter(Grades == "All") %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "All")
#Combined
Combined_B<-x_2 %>%
drop_na(RowMeans) %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))%>%
mutate(Type = "Combined")
Combined_Summary<-rbind(Elem_B,MS_B,HS_B,All_B,Combined_B)
Combined_Summary
#Combined
x_2 %>%
drop_na(RowMeans) %>%
summarise(mean= mean(RowMeans, na.rm = T),
median = median(RowMeans, na.rm= T),
q10 = quantile(x = RowMeans, 0.1, na.rm = T),
q90 = quantile(x = RowMeans, 0.90, na.rm = T),
min = min(x = RowMeans, na.rm = T),
max = max(x = RowMeans, na.rm = T),
n = length(RowMeans))
setwd("~/GitHub/Share-Table-Milk/R")
SpeciesDF<-read_csv("SpeciesData.csv")
library(tidyverse)
library(ExtDist)
install.packages("ExtDist")
install.packages("jmuOutlier")
install.packages("truncnorm")
library(tidyverse)
library(ExtDist)
library(jmuOutlier)
library(truncnorm)
#Function for growth and lag phase
new_growth_rate<-function(newTemp, oldMu,oldTemp = 6, T0 = -4.15){
newMu<-((newTemp-T0)/(oldTemp-T0))* oldMu
return (newMu)
}
#Calculation of the new lag time.
new_lag_time <- function (newTemp, oldLag, oldTemp = 6, T0 = -4.15) {
numerator <- oldTemp -T0
denom <- newTemp - T0
newLag <- ( (numerator / denom)^2) * oldLag
return(newLag)
}
#Automatic Time + Change function
look_for_st<-function(df = SpeciesDF,ST, par_of_int){
if (par_of_int == "lagt"){
x<-df %>%
filter(Species_St == ST) %>%
pull(lag_h)
} else if (par_of_int == "mumax"){
x<-df %>%
filter(Species_St == ST) %>%
pull(mumax)
} else if (par_of_int == "Nmax"){
x<-df %>%
filter(Species_St == ST) %>%
pull(Nmax)
} else if (par_of_int == "GModel"){
x<-df %>%
filter(Species_St == ST) %>%
pull(GModel)
}else {
stop(paste0(par_of_int, " is not a valid parameter name. Must be one of lagt, mumax, Nmax"))
}
return(x)
}
Func_Growth_LagCon<-function(In_Lag_Consumed, Time_Temp_df,ST_Iter,Interval){
#In_Lag_Consumed= Total lag time consumed
#Time_Temp_df = dataframe with time and temperature conditions
#ST_Iter = The ST that corresponds to this milk carton
#Interval = time interval in the time_temp_df in hrs.
Total_Lag_Consumed<-In_Lag_Consumed
Total_Growth  <- 0
old_lag = look_for_st(ST= ST_Iter, par_of_int = "lagt")
old_mumax = look_for_st(ST= ST_Iter, par_of_int = "mumax")
for (i in 1:nrow(Time_Temp_df)){
if (Total_Lag_Consumed <1 && old_lag!=0){
Lag_t_interval<-new_lag_time(newTemp = Time_Temp_df$Temperature[i], oldLag = old_lag)
Lag_Consumed<-Interval/Lag_t_interval
Total_Lag_Consumed<-Total_Lag_Consumed+Lag_Consumed
Growth = 0
} else if (Total_Lag_Consumed>=1 | old_lag == 0){
Growth = ((new_growth_rate(newTemp = Time_Temp_df$Temperature[i], oldMu = old_mumax))/2.303)*0.684 #Converted log10 from log ln
Total_Growth = Total_Growth + (Growth*Interval)
}
}
return(c(Total_Growth,Total_Lag_Consumed))
}
SpeciesDF<-read_csv("SpeciesData.csv")
View(SpeciesDF)
Milkdf<-data.frame("MilkID" = seq(0,10000),"SpoilageCon" =NA, "LagCon" = 0, "Species" = NA)
View(Milkdf)
Prevs<-c(8.93,0.65,1.53,0.87,8.93,0.22,1.31,0.22,0.22,2.18,2.18)
Prevs<-c(8.93,0.65,1.53,0.87,8.93,0.22,1.31,1.31,0.22,0.22,2.18,2.18)
Prevs<-Prevs/sum(Prevs)
SpeciesDF$Prev<-Prevs
Prevs<-Prevs/sum(Prevs)
SpeciesDF$Prev<-Prevs
Milkdf$Species<-sample(Species_St,size = length(Milkdf$Species), prob = freq, replace = T)
SpeciesDF<-read_csv("SpeciesData.csv")
Prevs<-c(8.93,0.65,1.53,0.87,8.93,0.22,1.31,1.31,0.22,0.22,2.18,2.18)
Prevs<-Prevs/sum(Prevs)
SpeciesDF$Prev<-Prevs
Milkdf$Species<-sample(SpeciesDF$ST,size = length(Milkdf$Species), prob = SpeciesDF$Prev, replace = T)
Milkdf$SpoilageCon<-rtruncnorm(n = length(Milkdf$SpoilageCon),b = 3, mean =0.3817872, sd=1.108859)
hist(Milkdf$SpoilageCon)
Time_Temp_df<-Time_Temp_Creation(Total_Time = 24*10, Interval = 0.5, Initial_Temperature = 4.06, Final_Temperature = 4.06)
Time_Temp_df<-Time_Temp_Creation(Total_Time = 24*10, Interval = 0.5, Initial_Temperature = 4.06, Final_Temperature = 4.06)
Time_Temp_Creation<-function(Total_Time, Interval, Initial_Temperature, Final_Temperature){
Time_Temp_df<-data.frame("Time_h"= seq(0,Total_Time,by = Interval),
"Temperature"  = seq(Initial_Temperature,Final_Temperature, by = ((Final_Temperature - Initial_Temperature)/(length(seq(0,Total_Time,by = Interval)) - 1) )))
}
Time_Temp_df<-Time_Temp_Creation(Total_Time = 24*10, Interval = 0.5, Initial_Temperature = 4.06, Final_Temperature = 4.06)
View(Time_Temp_df)
for(i in 1:nrow(Milkdf)){
In_Lag_Consumed<-Milkdf$LagCon[i]
ST_Iter<-Milkdf$Species[i]
Pop_Max<-look_for_st(ST= ST_Iter,par_of_int = "Nmax")
#Creating Time Temp Df
Temperature_Static<- rlaplace(1,m=4.06,s=2.31)
while (Temperature_Static > 15 | Temperature_Static < -1) {
Temperature_Static<- rlaplace(1,m=4.06,s=2.31)
}
Time_Temp_df<-Time_Temp_Creation(Total_Time = 24*14, Interval = 0.5, Initial_Temperature = Temperature_Static, Final_Temperature = Temperature_Static)
Interval <- Time_Temp_df$Time_h[2]
Output_Milk<-Func_Growth_LagCon(In_Lag_Consumed = In_Lag_Consumed ,Time_Temp_df = Time_Temp_df,ST_Iter = ST_Iter,Interval = Interval)
Milkdf$LagCon[i]<-Output_Milk[2]
Milkdf$SpoilageCon[i]<-Output_Milk[1]+Milkdf$SpoilageCon[i]
if(Milkdf$SpoilageCon[i]>Pop_Max){
Milkdf$SpoilageCon[i]<-Pop_Max
}
}
#Automatic Time + Change function
look_for_st<-function(df = SpeciesDF,st, par_of_int){
if (par_of_int == "lagt"){
x<-df %>%
filter(ST == st) %>%
pull(lag_h)
} else if (par_of_int == "mumax"){
x<-df %>%
filter(ST == st) %>%
pull(mumax)
} else if (par_of_int == "Nmax"){
x<-df %>%
filter(ST == st) %>%
pull(Nmax)
} else if (par_of_int == "GModel"){
x<-df %>%
filter(ST == st) %>%
pull(GModel)
}else {
stop(paste0(par_of_int, " is not a valid parameter name. Must be one of lagt, mumax, Nmax"))
}
return(x)
}
